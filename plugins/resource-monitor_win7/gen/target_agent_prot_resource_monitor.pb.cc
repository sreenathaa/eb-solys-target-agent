// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_resource_monitor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "target_agent_prot_resource_monitor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ResourceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProcessInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProcessInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ThreadInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ThreadInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto() {
  protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "target_agent_prot_resource_monitor.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceInfo_descriptor_ = file->message_type(0);
  static const int ResourceInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, process_),
  };
  ResourceInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResourceInfo_descriptor_,
      ResourceInfo::default_instance_,
      ResourceInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResourceInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, _internal_metadata_),
      -1);
  SystemInfo_descriptor_ = file->message_type(1);
  static const int SystemInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, numberofcores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, totalvmmembytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, usedvmmembytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, totalpmmembytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, usedpmmembytes_),
  };
  SystemInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SystemInfo_descriptor_,
      SystemInfo::default_instance_,
      SystemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SystemInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInfo, _internal_metadata_),
      -1);
  ProcessInfo_descriptor_ = file->message_type(2);
  static const int ProcessInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, timeinkernelmodems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, timeinusermodems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, vmusagebytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, threads_),
  };
  ProcessInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProcessInfo_descriptor_,
      ProcessInfo::default_instance_,
      ProcessInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ProcessInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessInfo, _internal_metadata_),
      -1);
  ThreadInfo_descriptor_ = file->message_type(3);
  static const int ThreadInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, timeinkernelmodems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, timeinusermodems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, vmbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, priority_),
  };
  ThreadInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ThreadInfo_descriptor_,
      ThreadInfo::default_instance_,
      ThreadInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ThreadInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResourceInfo_descriptor_, &ResourceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SystemInfo_descriptor_, &SystemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProcessInfo_descriptor_, &ProcessInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ThreadInfo_descriptor_, &ThreadInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto() {
  delete ResourceInfo::default_instance_;
  delete ResourceInfo_reflection_;
  delete SystemInfo::default_instance_;
  delete SystemInfo_reflection_;
  delete ProcessInfo::default_instance_;
  delete ProcessInfo_reflection_;
  delete ThreadInfo::default_instance_;
  delete ThreadInfo_reflection_;
}

void protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(target_agent_prot_resource_monitor.pro"
    "to\"J\n\014ResourceInfo\022\033\n\006system\030\001 \001(\0132\013.Sys"
    "temInfo\022\035\n\007process\030\002 \003(\0132\014.ProcessInfo\"\205"
    "\001\n\nSystemInfo\022\025\n\rnumberOfCores\030\001 \002(\r\022\027\n\017"
    "totalVmMemBytes\030\002 \002(\004\022\026\n\016usedVmMemBytes\030"
    "\003 \002(\004\022\027\n\017totalPmMemBytes\030\004 \002(\004\022\026\n\016usedPm"
    "MemBytes\030\005 \002(\004\"\222\001\n\013ProcessInfo\022\013\n\003pid\030\001 "
    "\002(\003\022\014\n\004name\030\002 \002(\t\022\032\n\022timeInKernelModeMs\030"
    "\003 \001(\004\022\030\n\020timeInUserModeMs\030\004 \001(\004\022\024\n\014vmUsa"
    "geBytes\030\005 \001(\004\022\034\n\007threads\030\007 \003(\0132\013.ThreadI"
    "nfo\"\242\001\n\nThreadInfo\022\013\n\003tid\030\001 \002(\003\022\014\n\004name\030"
    "\002 \002(\t\022\032\n\022timeInKernelModeMs\030\003 \001(\004\022\030\n\020tim"
    "eInUserModeMs\030\004 \001(\004\022\017\n\007vmBytes\030\005 \001(\004\022\r\n\005"
    "state\030\006 \001(\t\022\021\n\ttimestamp\030\007 \001(\004\022\020\n\010priori"
    "ty\030\010 \001(\005B`\nCcom.elektrobit.ebrace.genivi"
    ".targetadapter.resourcemonitor.protobufB"
    "\031TargetAgentProtocolResMon", 666);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "target_agent_prot_resource_monitor.proto", &protobuf_RegisterTypes);
  ResourceInfo::default_instance_ = new ResourceInfo();
  SystemInfo::default_instance_ = new SystemInfo();
  ProcessInfo::default_instance_ = new ProcessInfo();
  ThreadInfo::default_instance_ = new ThreadInfo();
  ResourceInfo::default_instance_->InitAsDefaultInstance();
  SystemInfo::default_instance_->InitAsDefaultInstance();
  ProcessInfo::default_instance_->InitAsDefaultInstance();
  ThreadInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_target_5fagent_5fprot_5fresource_5fmonitor_2eproto {
  StaticDescriptorInitializer_target_5fagent_5fprot_5fresource_5fmonitor_2eproto() {
    protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  }
} static_descriptor_initializer_target_5fagent_5fprot_5fresource_5fmonitor_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceInfo::kSystemFieldNumber;
const int ResourceInfo::kProcessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceInfo::ResourceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceInfo)
}

void ResourceInfo::InitAsDefaultInstance() {
  system_ = const_cast< ::SystemInfo*>(&::SystemInfo::default_instance());
}

ResourceInfo::ResourceInfo(const ResourceInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResourceInfo)
}

void ResourceInfo::SharedCtor() {
  _cached_size_ = 0;
  system_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceInfo::~ResourceInfo() {
  // @@protoc_insertion_point(destructor:ResourceInfo)
  SharedDtor();
}

void ResourceInfo::SharedDtor() {
  if (this != default_instance_) {
    delete system_;
  }
}

void ResourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceInfo_descriptor_;
}

const ResourceInfo& ResourceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  return *default_instance_;
}

ResourceInfo* ResourceInfo::default_instance_ = NULL;

ResourceInfo* ResourceInfo::New(::google::protobuf::Arena* arena) const {
  ResourceInfo* n = new ResourceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ResourceInfo)
  if (has_system()) {
    if (system_ != NULL) system_->::SystemInfo::Clear();
  }
  process_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SystemInfo system = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_process;
        break;
      }

      // repeated .ProcessInfo process = 2;
      case 2: {
        if (tag == 18) {
         parse_process:
          DO_(input->IncrementRecursionDepth());
         parse_loop_process:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_process()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_process;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceInfo)
  return false;
#undef DO_
}

void ResourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceInfo)
  // optional .SystemInfo system = 1;
  if (has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->system_, output);
  }

  // repeated .ProcessInfo process = 2;
  for (unsigned int i = 0, n = this->process_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->process(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceInfo)
}

::google::protobuf::uint8* ResourceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResourceInfo)
  // optional .SystemInfo system = 1;
  if (has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->system_, false, target);
  }

  // repeated .ProcessInfo process = 2;
  for (unsigned int i = 0, n = this->process_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->process(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceInfo)
  return target;
}

int ResourceInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ResourceInfo)
  int total_size = 0;

  // optional .SystemInfo system = 1;
  if (has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->system_);
  }

  // repeated .ProcessInfo process = 2;
  total_size += 1 * this->process_size();
  for (int i = 0; i < this->process_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->process(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResourceInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResourceInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResourceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResourceInfo)
    MergeFrom(*source);
  }
}

void ResourceInfo::MergeFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResourceInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  process_.MergeFrom(from.process_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_system()) {
      mutable_system()->::SystemInfo::MergeFrom(from.system());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceInfo::CopyFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfo::IsInitialized() const {

  if (has_system()) {
    if (!this->system_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->process())) return false;
  return true;
}

void ResourceInfo::Swap(ResourceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceInfo::InternalSwap(ResourceInfo* other) {
  std::swap(system_, other->system_);
  process_.UnsafeArenaSwap(&other->process_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceInfo_descriptor_;
  metadata.reflection = ResourceInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceInfo

// optional .SystemInfo system = 1;
bool ResourceInfo::has_system() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResourceInfo::set_has_system() {
  _has_bits_[0] |= 0x00000001u;
}
void ResourceInfo::clear_has_system() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResourceInfo::clear_system() {
  if (system_ != NULL) system_->::SystemInfo::Clear();
  clear_has_system();
}
const ::SystemInfo& ResourceInfo::system() const {
  // @@protoc_insertion_point(field_get:ResourceInfo.system)
  return system_ != NULL ? *system_ : *default_instance_->system_;
}
::SystemInfo* ResourceInfo::mutable_system() {
  set_has_system();
  if (system_ == NULL) {
    system_ = new ::SystemInfo;
  }
  // @@protoc_insertion_point(field_mutable:ResourceInfo.system)
  return system_;
}
::SystemInfo* ResourceInfo::release_system() {
  // @@protoc_insertion_point(field_release:ResourceInfo.system)
  clear_has_system();
  ::SystemInfo* temp = system_;
  system_ = NULL;
  return temp;
}
void ResourceInfo::set_allocated_system(::SystemInfo* system) {
  delete system_;
  system_ = system;
  if (system) {
    set_has_system();
  } else {
    clear_has_system();
  }
  // @@protoc_insertion_point(field_set_allocated:ResourceInfo.system)
}

// repeated .ProcessInfo process = 2;
int ResourceInfo::process_size() const {
  return process_.size();
}
void ResourceInfo::clear_process() {
  process_.Clear();
}
const ::ProcessInfo& ResourceInfo::process(int index) const {
  // @@protoc_insertion_point(field_get:ResourceInfo.process)
  return process_.Get(index);
}
::ProcessInfo* ResourceInfo::mutable_process(int index) {
  // @@protoc_insertion_point(field_mutable:ResourceInfo.process)
  return process_.Mutable(index);
}
::ProcessInfo* ResourceInfo::add_process() {
  // @@protoc_insertion_point(field_add:ResourceInfo.process)
  return process_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProcessInfo >*
ResourceInfo::mutable_process() {
  // @@protoc_insertion_point(field_mutable_list:ResourceInfo.process)
  return &process_;
}
const ::google::protobuf::RepeatedPtrField< ::ProcessInfo >&
ResourceInfo::process() const {
  // @@protoc_insertion_point(field_list:ResourceInfo.process)
  return process_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemInfo::kNumberOfCoresFieldNumber;
const int SystemInfo::kTotalVmMemBytesFieldNumber;
const int SystemInfo::kUsedVmMemBytesFieldNumber;
const int SystemInfo::kTotalPmMemBytesFieldNumber;
const int SystemInfo::kUsedPmMemBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemInfo::SystemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemInfo)
}

void SystemInfo::InitAsDefaultInstance() {
}

SystemInfo::SystemInfo(const SystemInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SystemInfo)
}

void SystemInfo::SharedCtor() {
  _cached_size_ = 0;
  numberofcores_ = 0u;
  totalvmmembytes_ = GOOGLE_ULONGLONG(0);
  usedvmmembytes_ = GOOGLE_ULONGLONG(0);
  totalpmmembytes_ = GOOGLE_ULONGLONG(0);
  usedpmmembytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemInfo::~SystemInfo() {
  // @@protoc_insertion_point(destructor:SystemInfo)
  SharedDtor();
}

void SystemInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SystemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemInfo_descriptor_;
}

const SystemInfo& SystemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  return *default_instance_;
}

SystemInfo* SystemInfo::default_instance_ = NULL;

SystemInfo* SystemInfo::New(::google::protobuf::Arena* arena) const {
  SystemInfo* n = new SystemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SystemInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SystemInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(totalvmmembytes_, numberofcores_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SystemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 numberOfCores = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numberofcores_)));
          set_has_numberofcores();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_totalVmMemBytes;
        break;
      }

      // required uint64 totalVmMemBytes = 2;
      case 2: {
        if (tag == 16) {
         parse_totalVmMemBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalvmmembytes_)));
          set_has_totalvmmembytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_usedVmMemBytes;
        break;
      }

      // required uint64 usedVmMemBytes = 3;
      case 3: {
        if (tag == 24) {
         parse_usedVmMemBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &usedvmmembytes_)));
          set_has_usedvmmembytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_totalPmMemBytes;
        break;
      }

      // required uint64 totalPmMemBytes = 4;
      case 4: {
        if (tag == 32) {
         parse_totalPmMemBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totalpmmembytes_)));
          set_has_totalpmmembytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_usedPmMemBytes;
        break;
      }

      // required uint64 usedPmMemBytes = 5;
      case 5: {
        if (tag == 40) {
         parse_usedPmMemBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &usedpmmembytes_)));
          set_has_usedpmmembytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemInfo)
  return false;
#undef DO_
}

void SystemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemInfo)
  // required uint32 numberOfCores = 1;
  if (has_numberofcores()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->numberofcores(), output);
  }

  // required uint64 totalVmMemBytes = 2;
  if (has_totalvmmembytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->totalvmmembytes(), output);
  }

  // required uint64 usedVmMemBytes = 3;
  if (has_usedvmmembytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->usedvmmembytes(), output);
  }

  // required uint64 totalPmMemBytes = 4;
  if (has_totalpmmembytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->totalpmmembytes(), output);
  }

  // required uint64 usedPmMemBytes = 5;
  if (has_usedpmmembytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->usedpmmembytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemInfo)
}

::google::protobuf::uint8* SystemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SystemInfo)
  // required uint32 numberOfCores = 1;
  if (has_numberofcores()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->numberofcores(), target);
  }

  // required uint64 totalVmMemBytes = 2;
  if (has_totalvmmembytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->totalvmmembytes(), target);
  }

  // required uint64 usedVmMemBytes = 3;
  if (has_usedvmmembytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->usedvmmembytes(), target);
  }

  // required uint64 totalPmMemBytes = 4;
  if (has_totalpmmembytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->totalpmmembytes(), target);
  }

  // required uint64 usedPmMemBytes = 5;
  if (has_usedpmmembytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->usedpmmembytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemInfo)
  return target;
}

int SystemInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SystemInfo)
  int total_size = 0;

  if (has_numberofcores()) {
    // required uint32 numberOfCores = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numberofcores());
  }

  if (has_totalvmmembytes()) {
    // required uint64 totalVmMemBytes = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalvmmembytes());
  }

  if (has_usedvmmembytes()) {
    // required uint64 usedVmMemBytes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->usedvmmembytes());
  }

  if (has_totalpmmembytes()) {
    // required uint64 totalPmMemBytes = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalpmmembytes());
  }

  if (has_usedpmmembytes()) {
    // required uint64 usedPmMemBytes = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->usedpmmembytes());
  }

  return total_size;
}
int SystemInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SystemInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint32 numberOfCores = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numberofcores());

    // required uint64 totalVmMemBytes = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalvmmembytes());

    // required uint64 usedVmMemBytes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->usedvmmembytes());

    // required uint64 totalPmMemBytes = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totalpmmembytes());

    // required uint64 usedPmMemBytes = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->usedpmmembytes());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SystemInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemInfo)
    MergeFrom(*source);
  }
}

void SystemInfo::MergeFrom(const SystemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numberofcores()) {
      set_numberofcores(from.numberofcores());
    }
    if (from.has_totalvmmembytes()) {
      set_totalvmmembytes(from.totalvmmembytes());
    }
    if (from.has_usedvmmembytes()) {
      set_usedvmmembytes(from.usedvmmembytes());
    }
    if (from.has_totalpmmembytes()) {
      set_totalpmmembytes(from.totalpmmembytes());
    }
    if (from.has_usedpmmembytes()) {
      set_usedpmmembytes(from.usedpmmembytes());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SystemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfo::CopyFrom(const SystemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void SystemInfo::Swap(SystemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemInfo::InternalSwap(SystemInfo* other) {
  std::swap(numberofcores_, other->numberofcores_);
  std::swap(totalvmmembytes_, other->totalvmmembytes_);
  std::swap(usedvmmembytes_, other->usedvmmembytes_);
  std::swap(totalpmmembytes_, other->totalpmmembytes_);
  std::swap(usedpmmembytes_, other->usedpmmembytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemInfo_descriptor_;
  metadata.reflection = SystemInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemInfo

// required uint32 numberOfCores = 1;
bool SystemInfo::has_numberofcores() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SystemInfo::set_has_numberofcores() {
  _has_bits_[0] |= 0x00000001u;
}
void SystemInfo::clear_has_numberofcores() {
  _has_bits_[0] &= ~0x00000001u;
}
void SystemInfo::clear_numberofcores() {
  numberofcores_ = 0u;
  clear_has_numberofcores();
}
 ::google::protobuf::uint32 SystemInfo::numberofcores() const {
  // @@protoc_insertion_point(field_get:SystemInfo.numberOfCores)
  return numberofcores_;
}
 void SystemInfo::set_numberofcores(::google::protobuf::uint32 value) {
  set_has_numberofcores();
  numberofcores_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.numberOfCores)
}

// required uint64 totalVmMemBytes = 2;
bool SystemInfo::has_totalvmmembytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SystemInfo::set_has_totalvmmembytes() {
  _has_bits_[0] |= 0x00000002u;
}
void SystemInfo::clear_has_totalvmmembytes() {
  _has_bits_[0] &= ~0x00000002u;
}
void SystemInfo::clear_totalvmmembytes() {
  totalvmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_totalvmmembytes();
}
 ::google::protobuf::uint64 SystemInfo::totalvmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.totalVmMemBytes)
  return totalvmmembytes_;
}
 void SystemInfo::set_totalvmmembytes(::google::protobuf::uint64 value) {
  set_has_totalvmmembytes();
  totalvmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.totalVmMemBytes)
}

// required uint64 usedVmMemBytes = 3;
bool SystemInfo::has_usedvmmembytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SystemInfo::set_has_usedvmmembytes() {
  _has_bits_[0] |= 0x00000004u;
}
void SystemInfo::clear_has_usedvmmembytes() {
  _has_bits_[0] &= ~0x00000004u;
}
void SystemInfo::clear_usedvmmembytes() {
  usedvmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_usedvmmembytes();
}
 ::google::protobuf::uint64 SystemInfo::usedvmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.usedVmMemBytes)
  return usedvmmembytes_;
}
 void SystemInfo::set_usedvmmembytes(::google::protobuf::uint64 value) {
  set_has_usedvmmembytes();
  usedvmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.usedVmMemBytes)
}

// required uint64 totalPmMemBytes = 4;
bool SystemInfo::has_totalpmmembytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SystemInfo::set_has_totalpmmembytes() {
  _has_bits_[0] |= 0x00000008u;
}
void SystemInfo::clear_has_totalpmmembytes() {
  _has_bits_[0] &= ~0x00000008u;
}
void SystemInfo::clear_totalpmmembytes() {
  totalpmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_totalpmmembytes();
}
 ::google::protobuf::uint64 SystemInfo::totalpmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.totalPmMemBytes)
  return totalpmmembytes_;
}
 void SystemInfo::set_totalpmmembytes(::google::protobuf::uint64 value) {
  set_has_totalpmmembytes();
  totalpmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.totalPmMemBytes)
}

// required uint64 usedPmMemBytes = 5;
bool SystemInfo::has_usedpmmembytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SystemInfo::set_has_usedpmmembytes() {
  _has_bits_[0] |= 0x00000010u;
}
void SystemInfo::clear_has_usedpmmembytes() {
  _has_bits_[0] &= ~0x00000010u;
}
void SystemInfo::clear_usedpmmembytes() {
  usedpmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_usedpmmembytes();
}
 ::google::protobuf::uint64 SystemInfo::usedpmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.usedPmMemBytes)
  return usedpmmembytes_;
}
 void SystemInfo::set_usedpmmembytes(::google::protobuf::uint64 value) {
  set_has_usedpmmembytes();
  usedpmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.usedPmMemBytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessInfo::kPidFieldNumber;
const int ProcessInfo::kNameFieldNumber;
const int ProcessInfo::kTimeInKernelModeMsFieldNumber;
const int ProcessInfo::kTimeInUserModeMsFieldNumber;
const int ProcessInfo::kVmUsageBytesFieldNumber;
const int ProcessInfo::kThreadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessInfo::ProcessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProcessInfo)
}

void ProcessInfo::InitAsDefaultInstance() {
}

ProcessInfo::ProcessInfo(const ProcessInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProcessInfo)
}

void ProcessInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeinkernelmodems_ = GOOGLE_ULONGLONG(0);
  timeinusermodems_ = GOOGLE_ULONGLONG(0);
  vmusagebytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProcessInfo::~ProcessInfo() {
  // @@protoc_insertion_point(destructor:ProcessInfo)
  SharedDtor();
}

void ProcessInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ProcessInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProcessInfo_descriptor_;
}

const ProcessInfo& ProcessInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  return *default_instance_;
}

ProcessInfo* ProcessInfo::default_instance_ = NULL;

ProcessInfo* ProcessInfo::New(::google::protobuf::Arena* arena) const {
  ProcessInfo* n = new ProcessInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ProcessInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProcessInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProcessInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(timeinkernelmodems_, vmusagebytes_);
    pid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  threads_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ProcessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProcessInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 pid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProcessInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timeInKernelModeMs;
        break;
      }

      // optional uint64 timeInKernelModeMs = 3;
      case 3: {
        if (tag == 24) {
         parse_timeInKernelModeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeinkernelmodems_)));
          set_has_timeinkernelmodems();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_timeInUserModeMs;
        break;
      }

      // optional uint64 timeInUserModeMs = 4;
      case 4: {
        if (tag == 32) {
         parse_timeInUserModeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeinusermodems_)));
          set_has_timeinusermodems();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_vmUsageBytes;
        break;
      }

      // optional uint64 vmUsageBytes = 5;
      case 5: {
        if (tag == 40) {
         parse_vmUsageBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vmusagebytes_)));
          set_has_vmusagebytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_threads;
        break;
      }

      // repeated .ThreadInfo threads = 7;
      case 7: {
        if (tag == 58) {
         parse_threads:
          DO_(input->IncrementRecursionDepth());
         parse_loop_threads:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_threads()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_threads;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProcessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProcessInfo)
  return false;
#undef DO_
}

void ProcessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProcessInfo)
  // required int64 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProcessInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 timeInKernelModeMs = 3;
  if (has_timeinkernelmodems()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timeinkernelmodems(), output);
  }

  // optional uint64 timeInUserModeMs = 4;
  if (has_timeinusermodems()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->timeinusermodems(), output);
  }

  // optional uint64 vmUsageBytes = 5;
  if (has_vmusagebytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->vmusagebytes(), output);
  }

  // repeated .ThreadInfo threads = 7;
  for (unsigned int i = 0, n = this->threads_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->threads(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProcessInfo)
}

::google::protobuf::uint8* ProcessInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProcessInfo)
  // required int64 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProcessInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint64 timeInKernelModeMs = 3;
  if (has_timeinkernelmodems()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timeinkernelmodems(), target);
  }

  // optional uint64 timeInUserModeMs = 4;
  if (has_timeinusermodems()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->timeinusermodems(), target);
  }

  // optional uint64 vmUsageBytes = 5;
  if (has_vmusagebytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->vmusagebytes(), target);
  }

  // repeated .ThreadInfo threads = 7;
  for (unsigned int i = 0, n = this->threads_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->threads(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProcessInfo)
  return target;
}

int ProcessInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProcessInfo)
  int total_size = 0;

  if (has_pid()) {
    // required int64 pid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int ProcessInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ProcessInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 pid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional uint64 timeInKernelModeMs = 3;
    if (has_timeinkernelmodems()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeinkernelmodems());
    }

    // optional uint64 timeInUserModeMs = 4;
    if (has_timeinusermodems()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeinusermodems());
    }

    // optional uint64 vmUsageBytes = 5;
    if (has_vmusagebytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->vmusagebytes());
    }

  }
  // repeated .ThreadInfo threads = 7;
  total_size += 1 * this->threads_size();
  for (int i = 0; i < this->threads_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->threads(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProcessInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProcessInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProcessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProcessInfo)
    MergeFrom(*source);
  }
}

void ProcessInfo::MergeFrom(const ProcessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProcessInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  threads_.MergeFrom(from.threads_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_timeinkernelmodems()) {
      set_timeinkernelmodems(from.timeinkernelmodems());
    }
    if (from.has_timeinusermodems()) {
      set_timeinusermodems(from.timeinusermodems());
    }
    if (from.has_vmusagebytes()) {
      set_vmusagebytes(from.vmusagebytes());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ProcessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProcessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessInfo::CopyFrom(const ProcessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProcessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->threads())) return false;
  return true;
}

void ProcessInfo::Swap(ProcessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessInfo::InternalSwap(ProcessInfo* other) {
  std::swap(pid_, other->pid_);
  name_.Swap(&other->name_);
  std::swap(timeinkernelmodems_, other->timeinkernelmodems_);
  std::swap(timeinusermodems_, other->timeinusermodems_);
  std::swap(vmusagebytes_, other->vmusagebytes_);
  threads_.UnsafeArenaSwap(&other->threads_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProcessInfo_descriptor_;
  metadata.reflection = ProcessInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProcessInfo

// required int64 pid = 1;
bool ProcessInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProcessInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
void ProcessInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProcessInfo::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
 ::google::protobuf::int64 ProcessInfo::pid() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.pid)
  return pid_;
}
 void ProcessInfo::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.pid)
}

// required string name = 2;
bool ProcessInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProcessInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ProcessInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProcessInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ProcessInfo::name() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProcessInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProcessInfo.name)
}
 void ProcessInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProcessInfo.name)
}
 void ProcessInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProcessInfo.name)
}
 ::std::string* ProcessInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ProcessInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProcessInfo::release_name() {
  // @@protoc_insertion_point(field_release:ProcessInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProcessInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProcessInfo.name)
}

// optional uint64 timeInKernelModeMs = 3;
bool ProcessInfo::has_timeinkernelmodems() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProcessInfo::set_has_timeinkernelmodems() {
  _has_bits_[0] |= 0x00000004u;
}
void ProcessInfo::clear_has_timeinkernelmodems() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProcessInfo::clear_timeinkernelmodems() {
  timeinkernelmodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinkernelmodems();
}
 ::google::protobuf::uint64 ProcessInfo::timeinkernelmodems() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.timeInKernelModeMs)
  return timeinkernelmodems_;
}
 void ProcessInfo::set_timeinkernelmodems(::google::protobuf::uint64 value) {
  set_has_timeinkernelmodems();
  timeinkernelmodems_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.timeInKernelModeMs)
}

// optional uint64 timeInUserModeMs = 4;
bool ProcessInfo::has_timeinusermodems() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProcessInfo::set_has_timeinusermodems() {
  _has_bits_[0] |= 0x00000008u;
}
void ProcessInfo::clear_has_timeinusermodems() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProcessInfo::clear_timeinusermodems() {
  timeinusermodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinusermodems();
}
 ::google::protobuf::uint64 ProcessInfo::timeinusermodems() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.timeInUserModeMs)
  return timeinusermodems_;
}
 void ProcessInfo::set_timeinusermodems(::google::protobuf::uint64 value) {
  set_has_timeinusermodems();
  timeinusermodems_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.timeInUserModeMs)
}

// optional uint64 vmUsageBytes = 5;
bool ProcessInfo::has_vmusagebytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProcessInfo::set_has_vmusagebytes() {
  _has_bits_[0] |= 0x00000010u;
}
void ProcessInfo::clear_has_vmusagebytes() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProcessInfo::clear_vmusagebytes() {
  vmusagebytes_ = GOOGLE_ULONGLONG(0);
  clear_has_vmusagebytes();
}
 ::google::protobuf::uint64 ProcessInfo::vmusagebytes() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.vmUsageBytes)
  return vmusagebytes_;
}
 void ProcessInfo::set_vmusagebytes(::google::protobuf::uint64 value) {
  set_has_vmusagebytes();
  vmusagebytes_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.vmUsageBytes)
}

// repeated .ThreadInfo threads = 7;
int ProcessInfo::threads_size() const {
  return threads_.size();
}
void ProcessInfo::clear_threads() {
  threads_.Clear();
}
const ::ThreadInfo& ProcessInfo::threads(int index) const {
  // @@protoc_insertion_point(field_get:ProcessInfo.threads)
  return threads_.Get(index);
}
::ThreadInfo* ProcessInfo::mutable_threads(int index) {
  // @@protoc_insertion_point(field_mutable:ProcessInfo.threads)
  return threads_.Mutable(index);
}
::ThreadInfo* ProcessInfo::add_threads() {
  // @@protoc_insertion_point(field_add:ProcessInfo.threads)
  return threads_.Add();
}
::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
ProcessInfo::mutable_threads() {
  // @@protoc_insertion_point(field_mutable_list:ProcessInfo.threads)
  return &threads_;
}
const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
ProcessInfo::threads() const {
  // @@protoc_insertion_point(field_list:ProcessInfo.threads)
  return threads_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThreadInfo::kTidFieldNumber;
const int ThreadInfo::kNameFieldNumber;
const int ThreadInfo::kTimeInKernelModeMsFieldNumber;
const int ThreadInfo::kTimeInUserModeMsFieldNumber;
const int ThreadInfo::kVmBytesFieldNumber;
const int ThreadInfo::kStateFieldNumber;
const int ThreadInfo::kTimestampFieldNumber;
const int ThreadInfo::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThreadInfo::ThreadInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ThreadInfo)
}

void ThreadInfo::InitAsDefaultInstance() {
}

ThreadInfo::ThreadInfo(const ThreadInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ThreadInfo)
}

void ThreadInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeinkernelmodems_ = GOOGLE_ULONGLONG(0);
  timeinusermodems_ = GOOGLE_ULONGLONG(0);
  vmbytes_ = GOOGLE_ULONGLONG(0);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  priority_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ThreadInfo::~ThreadInfo() {
  // @@protoc_insertion_point(destructor:ThreadInfo)
  SharedDtor();
}

void ThreadInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ThreadInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThreadInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThreadInfo_descriptor_;
}

const ThreadInfo& ThreadInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  return *default_instance_;
}

ThreadInfo* ThreadInfo::default_instance_ = NULL;

ThreadInfo* ThreadInfo::New(::google::protobuf::Arena* arena) const {
  ThreadInfo* n = new ThreadInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThreadInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ThreadInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ThreadInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ThreadInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(timeinkernelmodems_, vmbytes_);
    ZR_(timestamp_, priority_);
    tid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_state()) {
      state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ThreadInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ThreadInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 tid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ThreadInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timeInKernelModeMs;
        break;
      }

      // optional uint64 timeInKernelModeMs = 3;
      case 3: {
        if (tag == 24) {
         parse_timeInKernelModeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeinkernelmodems_)));
          set_has_timeinkernelmodems();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_timeInUserModeMs;
        break;
      }

      // optional uint64 timeInUserModeMs = 4;
      case 4: {
        if (tag == 32) {
         parse_timeInUserModeMs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeinusermodems_)));
          set_has_timeinusermodems();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_vmBytes;
        break;
      }

      // optional uint64 vmBytes = 5;
      case 5: {
        if (tag == 40) {
         parse_vmBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vmbytes_)));
          set_has_vmbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_state;
        break;
      }

      // optional string state = 6;
      case 6: {
        if (tag == 50) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ThreadInfo.state");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 7;
      case 7: {
        if (tag == 56) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_priority;
        break;
      }

      // optional int32 priority = 8;
      case 8: {
        if (tag == 64) {
         parse_priority:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
          set_has_priority();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ThreadInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ThreadInfo)
  return false;
#undef DO_
}

void ThreadInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ThreadInfo)
  // required int64 tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->tid(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ThreadInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 timeInKernelModeMs = 3;
  if (has_timeinkernelmodems()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timeinkernelmodems(), output);
  }

  // optional uint64 timeInUserModeMs = 4;
  if (has_timeinusermodems()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->timeinusermodems(), output);
  }

  // optional uint64 vmBytes = 5;
  if (has_vmbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->vmbytes(), output);
  }

  // optional string state = 6;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ThreadInfo.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->state(), output);
  }

  // optional uint64 timestamp = 7;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->timestamp(), output);
  }

  // optional int32 priority = 8;
  if (has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->priority(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ThreadInfo)
}

::google::protobuf::uint8* ThreadInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ThreadInfo)
  // required int64 tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->tid(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ThreadInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint64 timeInKernelModeMs = 3;
  if (has_timeinkernelmodems()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timeinkernelmodems(), target);
  }

  // optional uint64 timeInUserModeMs = 4;
  if (has_timeinusermodems()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->timeinusermodems(), target);
  }

  // optional uint64 vmBytes = 5;
  if (has_vmbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->vmbytes(), target);
  }

  // optional string state = 6;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ThreadInfo.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->state(), target);
  }

  // optional uint64 timestamp = 7;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->timestamp(), target);
  }

  // optional int32 priority = 8;
  if (has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->priority(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ThreadInfo)
  return target;
}

int ThreadInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ThreadInfo)
  int total_size = 0;

  if (has_tid()) {
    // required int64 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tid());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int ThreadInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ThreadInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 tid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tid());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional uint64 timeInKernelModeMs = 3;
    if (has_timeinkernelmodems()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeinkernelmodems());
    }

    // optional uint64 timeInUserModeMs = 4;
    if (has_timeinusermodems()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeinusermodems());
    }

    // optional uint64 vmBytes = 5;
    if (has_vmbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->vmbytes());
    }

    // optional string state = 6;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional uint64 timestamp = 7;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional int32 priority = 8;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThreadInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ThreadInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ThreadInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ThreadInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ThreadInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ThreadInfo)
    MergeFrom(*source);
  }
}

void ThreadInfo::MergeFrom(const ThreadInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ThreadInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_timeinkernelmodems()) {
      set_timeinkernelmodems(from.timeinkernelmodems());
    }
    if (from.has_timeinusermodems()) {
      set_timeinusermodems(from.timeinusermodems());
    }
    if (from.has_vmbytes()) {
      set_vmbytes(from.vmbytes());
    }
    if (from.has_state()) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_priority()) {
      set_priority(from.priority());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ThreadInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ThreadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreadInfo::CopyFrom(const ThreadInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ThreadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreadInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ThreadInfo::Swap(ThreadInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThreadInfo::InternalSwap(ThreadInfo* other) {
  std::swap(tid_, other->tid_);
  name_.Swap(&other->name_);
  std::swap(timeinkernelmodems_, other->timeinkernelmodems_);
  std::swap(timeinusermodems_, other->timeinusermodems_);
  std::swap(vmbytes_, other->vmbytes_);
  state_.Swap(&other->state_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(priority_, other->priority_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThreadInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ThreadInfo_descriptor_;
  metadata.reflection = ThreadInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ThreadInfo

// required int64 tid = 1;
bool ThreadInfo::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ThreadInfo::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
void ThreadInfo::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ThreadInfo::clear_tid() {
  tid_ = GOOGLE_LONGLONG(0);
  clear_has_tid();
}
 ::google::protobuf::int64 ThreadInfo::tid() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.tid)
  return tid_;
}
 void ThreadInfo::set_tid(::google::protobuf::int64 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.tid)
}

// required string name = 2;
bool ThreadInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ThreadInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ThreadInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ThreadInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ThreadInfo::name() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ThreadInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ThreadInfo.name)
}
 void ThreadInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ThreadInfo.name)
}
 void ThreadInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ThreadInfo.name)
}
 ::std::string* ThreadInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ThreadInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ThreadInfo::release_name() {
  // @@protoc_insertion_point(field_release:ThreadInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ThreadInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ThreadInfo.name)
}

// optional uint64 timeInKernelModeMs = 3;
bool ThreadInfo::has_timeinkernelmodems() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ThreadInfo::set_has_timeinkernelmodems() {
  _has_bits_[0] |= 0x00000004u;
}
void ThreadInfo::clear_has_timeinkernelmodems() {
  _has_bits_[0] &= ~0x00000004u;
}
void ThreadInfo::clear_timeinkernelmodems() {
  timeinkernelmodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinkernelmodems();
}
 ::google::protobuf::uint64 ThreadInfo::timeinkernelmodems() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.timeInKernelModeMs)
  return timeinkernelmodems_;
}
 void ThreadInfo::set_timeinkernelmodems(::google::protobuf::uint64 value) {
  set_has_timeinkernelmodems();
  timeinkernelmodems_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.timeInKernelModeMs)
}

// optional uint64 timeInUserModeMs = 4;
bool ThreadInfo::has_timeinusermodems() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ThreadInfo::set_has_timeinusermodems() {
  _has_bits_[0] |= 0x00000008u;
}
void ThreadInfo::clear_has_timeinusermodems() {
  _has_bits_[0] &= ~0x00000008u;
}
void ThreadInfo::clear_timeinusermodems() {
  timeinusermodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinusermodems();
}
 ::google::protobuf::uint64 ThreadInfo::timeinusermodems() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.timeInUserModeMs)
  return timeinusermodems_;
}
 void ThreadInfo::set_timeinusermodems(::google::protobuf::uint64 value) {
  set_has_timeinusermodems();
  timeinusermodems_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.timeInUserModeMs)
}

// optional uint64 vmBytes = 5;
bool ThreadInfo::has_vmbytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ThreadInfo::set_has_vmbytes() {
  _has_bits_[0] |= 0x00000010u;
}
void ThreadInfo::clear_has_vmbytes() {
  _has_bits_[0] &= ~0x00000010u;
}
void ThreadInfo::clear_vmbytes() {
  vmbytes_ = GOOGLE_ULONGLONG(0);
  clear_has_vmbytes();
}
 ::google::protobuf::uint64 ThreadInfo::vmbytes() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.vmBytes)
  return vmbytes_;
}
 void ThreadInfo::set_vmbytes(::google::protobuf::uint64 value) {
  set_has_vmbytes();
  vmbytes_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.vmBytes)
}

// optional string state = 6;
bool ThreadInfo::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ThreadInfo::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
void ThreadInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
void ThreadInfo::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
 const ::std::string& ThreadInfo::state() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.state)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ThreadInfo::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ThreadInfo.state)
}
 void ThreadInfo::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ThreadInfo.state)
}
 void ThreadInfo::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ThreadInfo.state)
}
 ::std::string* ThreadInfo::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:ThreadInfo.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ThreadInfo::release_state() {
  // @@protoc_insertion_point(field_release:ThreadInfo.state)
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ThreadInfo::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:ThreadInfo.state)
}

// optional uint64 timestamp = 7;
bool ThreadInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ThreadInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
void ThreadInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
void ThreadInfo::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
 ::google::protobuf::uint64 ThreadInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.timestamp)
  return timestamp_;
}
 void ThreadInfo::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.timestamp)
}

// optional int32 priority = 8;
bool ThreadInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ThreadInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000080u;
}
void ThreadInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000080u;
}
void ThreadInfo::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
 ::google::protobuf::int32 ThreadInfo::priority() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.priority)
  return priority_;
}
 void ThreadInfo::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.priority)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
