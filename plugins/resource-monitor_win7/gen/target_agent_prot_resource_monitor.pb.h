// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_resource_monitor.proto

#ifndef PROTOBUF_target_5fagent_5fprot_5fresource_5fmonitor_2eproto__INCLUDED
#define PROTOBUF_target_5fagent_5fprot_5fresource_5fmonitor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2007000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
void protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();

class ProcessInfo;
class ResourceInfo;
class SystemInfo;
class ThreadInfo;

// ===================================================================

class ResourceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResourceInfo) */ {
 public:
  ResourceInfo();
  virtual ~ResourceInfo();

  ResourceInfo(const ResourceInfo& from);

  inline ResourceInfo& operator=(const ResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceInfo& default_instance();

  void Swap(ResourceInfo* other);

  // implements Message ----------------------------------------------

  inline ResourceInfo* New() const { return New(NULL); }

  ResourceInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceInfo& from);
  void MergeFrom(const ResourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SystemInfo system = 1;
  bool has_system() const;
  void clear_system();
  static const int kSystemFieldNumber = 1;
  const ::SystemInfo& system() const;
  ::SystemInfo* mutable_system();
  ::SystemInfo* release_system();
  void set_allocated_system(::SystemInfo* system);

  // repeated .ProcessInfo process = 2;
  int process_size() const;
  void clear_process();
  static const int kProcessFieldNumber = 2;
  const ::ProcessInfo& process(int index) const;
  ::ProcessInfo* mutable_process(int index);
  ::ProcessInfo* add_process();
  ::google::protobuf::RepeatedPtrField< ::ProcessInfo >*
      mutable_process();
  const ::google::protobuf::RepeatedPtrField< ::ProcessInfo >&
      process() const;

  // @@protoc_insertion_point(class_scope:ResourceInfo)
 private:
  inline void set_has_system();
  inline void clear_has_system();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SystemInfo* system_;
  ::google::protobuf::RepeatedPtrField< ::ProcessInfo > process_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static ResourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class SystemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SystemInfo) */ {
 public:
  SystemInfo();
  virtual ~SystemInfo();

  SystemInfo(const SystemInfo& from);

  inline SystemInfo& operator=(const SystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemInfo& default_instance();

  void Swap(SystemInfo* other);

  // implements Message ----------------------------------------------

  inline SystemInfo* New() const { return New(NULL); }

  SystemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemInfo& from);
  void MergeFrom(const SystemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SystemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 numberOfCores = 1;
  bool has_numberofcores() const;
  void clear_numberofcores();
  static const int kNumberOfCoresFieldNumber = 1;
  ::google::protobuf::uint32 numberofcores() const;
  void set_numberofcores(::google::protobuf::uint32 value);

  // required uint64 totalVmMemBytes = 2;
  bool has_totalvmmembytes() const;
  void clear_totalvmmembytes();
  static const int kTotalVmMemBytesFieldNumber = 2;
  ::google::protobuf::uint64 totalvmmembytes() const;
  void set_totalvmmembytes(::google::protobuf::uint64 value);

  // required uint64 usedVmMemBytes = 3;
  bool has_usedvmmembytes() const;
  void clear_usedvmmembytes();
  static const int kUsedVmMemBytesFieldNumber = 3;
  ::google::protobuf::uint64 usedvmmembytes() const;
  void set_usedvmmembytes(::google::protobuf::uint64 value);

  // required uint64 totalPmMemBytes = 4;
  bool has_totalpmmembytes() const;
  void clear_totalpmmembytes();
  static const int kTotalPmMemBytesFieldNumber = 4;
  ::google::protobuf::uint64 totalpmmembytes() const;
  void set_totalpmmembytes(::google::protobuf::uint64 value);

  // required uint64 usedPmMemBytes = 5;
  bool has_usedpmmembytes() const;
  void clear_usedpmmembytes();
  static const int kUsedPmMemBytesFieldNumber = 5;
  ::google::protobuf::uint64 usedpmmembytes() const;
  void set_usedpmmembytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SystemInfo)
 private:
  inline void set_has_numberofcores();
  inline void clear_has_numberofcores();
  inline void set_has_totalvmmembytes();
  inline void clear_has_totalvmmembytes();
  inline void set_has_usedvmmembytes();
  inline void clear_has_usedvmmembytes();
  inline void set_has_totalpmmembytes();
  inline void clear_has_totalpmmembytes();
  inline void set_has_usedpmmembytes();
  inline void clear_has_usedpmmembytes();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 totalvmmembytes_;
  ::google::protobuf::uint64 usedvmmembytes_;
  ::google::protobuf::uint64 totalpmmembytes_;
  ::google::protobuf::uint64 usedpmmembytes_;
  ::google::protobuf::uint32 numberofcores_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static SystemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ProcessInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProcessInfo) */ {
 public:
  ProcessInfo();
  virtual ~ProcessInfo();

  ProcessInfo(const ProcessInfo& from);

  inline ProcessInfo& operator=(const ProcessInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessInfo& default_instance();

  void Swap(ProcessInfo* other);

  // implements Message ----------------------------------------------

  inline ProcessInfo* New() const { return New(NULL); }

  ProcessInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessInfo& from);
  void MergeFrom(const ProcessInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProcessInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 pid = 1;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::int64 pid() const;
  void set_pid(::google::protobuf::int64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 timeInKernelModeMs = 3;
  bool has_timeinkernelmodems() const;
  void clear_timeinkernelmodems();
  static const int kTimeInKernelModeMsFieldNumber = 3;
  ::google::protobuf::uint64 timeinkernelmodems() const;
  void set_timeinkernelmodems(::google::protobuf::uint64 value);

  // optional uint64 timeInUserModeMs = 4;
  bool has_timeinusermodems() const;
  void clear_timeinusermodems();
  static const int kTimeInUserModeMsFieldNumber = 4;
  ::google::protobuf::uint64 timeinusermodems() const;
  void set_timeinusermodems(::google::protobuf::uint64 value);

  // optional uint64 vmUsageBytes = 5;
  bool has_vmusagebytes() const;
  void clear_vmusagebytes();
  static const int kVmUsageBytesFieldNumber = 5;
  ::google::protobuf::uint64 vmusagebytes() const;
  void set_vmusagebytes(::google::protobuf::uint64 value);

  // repeated .ThreadInfo threads = 7;
  int threads_size() const;
  void clear_threads();
  static const int kThreadsFieldNumber = 7;
  const ::ThreadInfo& threads(int index) const;
  ::ThreadInfo* mutable_threads(int index);
  ::ThreadInfo* add_threads();
  ::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
      mutable_threads();
  const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
      threads() const;

  // @@protoc_insertion_point(class_scope:ProcessInfo)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_timeinkernelmodems();
  inline void clear_has_timeinkernelmodems();
  inline void set_has_timeinusermodems();
  inline void clear_has_timeinusermodems();
  inline void set_has_vmusagebytes();
  inline void clear_has_vmusagebytes();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 timeinkernelmodems_;
  ::google::protobuf::uint64 timeinusermodems_;
  ::google::protobuf::uint64 vmusagebytes_;
  ::google::protobuf::RepeatedPtrField< ::ThreadInfo > threads_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static ProcessInfo* default_instance_;
};
// -------------------------------------------------------------------

class ThreadInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ThreadInfo) */ {
 public:
  ThreadInfo();
  virtual ~ThreadInfo();

  ThreadInfo(const ThreadInfo& from);

  inline ThreadInfo& operator=(const ThreadInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThreadInfo& default_instance();

  void Swap(ThreadInfo* other);

  // implements Message ----------------------------------------------

  inline ThreadInfo* New() const { return New(NULL); }

  ThreadInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThreadInfo& from);
  void MergeFrom(const ThreadInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ThreadInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int64 tid() const;
  void set_tid(::google::protobuf::int64 value);

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 timeInKernelModeMs = 3;
  bool has_timeinkernelmodems() const;
  void clear_timeinkernelmodems();
  static const int kTimeInKernelModeMsFieldNumber = 3;
  ::google::protobuf::uint64 timeinkernelmodems() const;
  void set_timeinkernelmodems(::google::protobuf::uint64 value);

  // optional uint64 timeInUserModeMs = 4;
  bool has_timeinusermodems() const;
  void clear_timeinusermodems();
  static const int kTimeInUserModeMsFieldNumber = 4;
  ::google::protobuf::uint64 timeinusermodems() const;
  void set_timeinusermodems(::google::protobuf::uint64 value);

  // optional uint64 vmBytes = 5;
  bool has_vmbytes() const;
  void clear_vmbytes();
  static const int kVmBytesFieldNumber = 5;
  ::google::protobuf::uint64 vmbytes() const;
  void set_vmbytes(::google::protobuf::uint64 value);

  // optional string state = 6;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 6;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // optional uint64 timestamp = 7;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional int32 priority = 8;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 8;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ThreadInfo)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_timeinkernelmodems();
  inline void clear_has_timeinkernelmodems();
  inline void set_has_timeinusermodems();
  inline void clear_has_timeinusermodems();
  inline void set_has_vmbytes();
  inline void clear_has_vmbytes();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_priority();
  inline void clear_has_priority();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 tid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 timeinkernelmodems_;
  ::google::protobuf::uint64 timeinusermodems_;
  ::google::protobuf::uint64 vmbytes_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::int32 priority_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fresource_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static ThreadInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceInfo

// optional .SystemInfo system = 1;
inline bool ResourceInfo::has_system() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceInfo::set_has_system() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceInfo::clear_has_system() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceInfo::clear_system() {
  if (system_ != NULL) system_->::SystemInfo::Clear();
  clear_has_system();
}
inline const ::SystemInfo& ResourceInfo::system() const {
  // @@protoc_insertion_point(field_get:ResourceInfo.system)
  return system_ != NULL ? *system_ : *default_instance_->system_;
}
inline ::SystemInfo* ResourceInfo::mutable_system() {
  set_has_system();
  if (system_ == NULL) {
    system_ = new ::SystemInfo;
  }
  // @@protoc_insertion_point(field_mutable:ResourceInfo.system)
  return system_;
}
inline ::SystemInfo* ResourceInfo::release_system() {
  // @@protoc_insertion_point(field_release:ResourceInfo.system)
  clear_has_system();
  ::SystemInfo* temp = system_;
  system_ = NULL;
  return temp;
}
inline void ResourceInfo::set_allocated_system(::SystemInfo* system) {
  delete system_;
  system_ = system;
  if (system) {
    set_has_system();
  } else {
    clear_has_system();
  }
  // @@protoc_insertion_point(field_set_allocated:ResourceInfo.system)
}

// repeated .ProcessInfo process = 2;
inline int ResourceInfo::process_size() const {
  return process_.size();
}
inline void ResourceInfo::clear_process() {
  process_.Clear();
}
inline const ::ProcessInfo& ResourceInfo::process(int index) const {
  // @@protoc_insertion_point(field_get:ResourceInfo.process)
  return process_.Get(index);
}
inline ::ProcessInfo* ResourceInfo::mutable_process(int index) {
  // @@protoc_insertion_point(field_mutable:ResourceInfo.process)
  return process_.Mutable(index);
}
inline ::ProcessInfo* ResourceInfo::add_process() {
  // @@protoc_insertion_point(field_add:ResourceInfo.process)
  return process_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ProcessInfo >*
ResourceInfo::mutable_process() {
  // @@protoc_insertion_point(field_mutable_list:ResourceInfo.process)
  return &process_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ProcessInfo >&
ResourceInfo::process() const {
  // @@protoc_insertion_point(field_list:ResourceInfo.process)
  return process_;
}

// -------------------------------------------------------------------

// SystemInfo

// required uint32 numberOfCores = 1;
inline bool SystemInfo::has_numberofcores() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemInfo::set_has_numberofcores() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemInfo::clear_has_numberofcores() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemInfo::clear_numberofcores() {
  numberofcores_ = 0u;
  clear_has_numberofcores();
}
inline ::google::protobuf::uint32 SystemInfo::numberofcores() const {
  // @@protoc_insertion_point(field_get:SystemInfo.numberOfCores)
  return numberofcores_;
}
inline void SystemInfo::set_numberofcores(::google::protobuf::uint32 value) {
  set_has_numberofcores();
  numberofcores_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.numberOfCores)
}

// required uint64 totalVmMemBytes = 2;
inline bool SystemInfo::has_totalvmmembytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemInfo::set_has_totalvmmembytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemInfo::clear_has_totalvmmembytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemInfo::clear_totalvmmembytes() {
  totalvmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_totalvmmembytes();
}
inline ::google::protobuf::uint64 SystemInfo::totalvmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.totalVmMemBytes)
  return totalvmmembytes_;
}
inline void SystemInfo::set_totalvmmembytes(::google::protobuf::uint64 value) {
  set_has_totalvmmembytes();
  totalvmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.totalVmMemBytes)
}

// required uint64 usedVmMemBytes = 3;
inline bool SystemInfo::has_usedvmmembytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemInfo::set_has_usedvmmembytes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemInfo::clear_has_usedvmmembytes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemInfo::clear_usedvmmembytes() {
  usedvmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_usedvmmembytes();
}
inline ::google::protobuf::uint64 SystemInfo::usedvmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.usedVmMemBytes)
  return usedvmmembytes_;
}
inline void SystemInfo::set_usedvmmembytes(::google::protobuf::uint64 value) {
  set_has_usedvmmembytes();
  usedvmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.usedVmMemBytes)
}

// required uint64 totalPmMemBytes = 4;
inline bool SystemInfo::has_totalpmmembytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemInfo::set_has_totalpmmembytes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SystemInfo::clear_has_totalpmmembytes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SystemInfo::clear_totalpmmembytes() {
  totalpmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_totalpmmembytes();
}
inline ::google::protobuf::uint64 SystemInfo::totalpmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.totalPmMemBytes)
  return totalpmmembytes_;
}
inline void SystemInfo::set_totalpmmembytes(::google::protobuf::uint64 value) {
  set_has_totalpmmembytes();
  totalpmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.totalPmMemBytes)
}

// required uint64 usedPmMemBytes = 5;
inline bool SystemInfo::has_usedpmmembytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemInfo::set_has_usedpmmembytes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SystemInfo::clear_has_usedpmmembytes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SystemInfo::clear_usedpmmembytes() {
  usedpmmembytes_ = GOOGLE_ULONGLONG(0);
  clear_has_usedpmmembytes();
}
inline ::google::protobuf::uint64 SystemInfo::usedpmmembytes() const {
  // @@protoc_insertion_point(field_get:SystemInfo.usedPmMemBytes)
  return usedpmmembytes_;
}
inline void SystemInfo::set_usedpmmembytes(::google::protobuf::uint64 value) {
  set_has_usedpmmembytes();
  usedpmmembytes_ = value;
  // @@protoc_insertion_point(field_set:SystemInfo.usedPmMemBytes)
}

// -------------------------------------------------------------------

// ProcessInfo

// required int64 pid = 1;
inline bool ProcessInfo::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcessInfo::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProcessInfo::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProcessInfo::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 ProcessInfo::pid() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.pid)
  return pid_;
}
inline void ProcessInfo::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.pid)
}

// required string name = 2;
inline bool ProcessInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcessInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProcessInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProcessInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ProcessInfo::name() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProcessInfo.name)
}
inline void ProcessInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProcessInfo.name)
}
inline void ProcessInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProcessInfo.name)
}
inline ::std::string* ProcessInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ProcessInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProcessInfo::release_name() {
  // @@protoc_insertion_point(field_release:ProcessInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProcessInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProcessInfo.name)
}

// optional uint64 timeInKernelModeMs = 3;
inline bool ProcessInfo::has_timeinkernelmodems() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcessInfo::set_has_timeinkernelmodems() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProcessInfo::clear_has_timeinkernelmodems() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProcessInfo::clear_timeinkernelmodems() {
  timeinkernelmodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinkernelmodems();
}
inline ::google::protobuf::uint64 ProcessInfo::timeinkernelmodems() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.timeInKernelModeMs)
  return timeinkernelmodems_;
}
inline void ProcessInfo::set_timeinkernelmodems(::google::protobuf::uint64 value) {
  set_has_timeinkernelmodems();
  timeinkernelmodems_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.timeInKernelModeMs)
}

// optional uint64 timeInUserModeMs = 4;
inline bool ProcessInfo::has_timeinusermodems() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcessInfo::set_has_timeinusermodems() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProcessInfo::clear_has_timeinusermodems() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProcessInfo::clear_timeinusermodems() {
  timeinusermodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinusermodems();
}
inline ::google::protobuf::uint64 ProcessInfo::timeinusermodems() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.timeInUserModeMs)
  return timeinusermodems_;
}
inline void ProcessInfo::set_timeinusermodems(::google::protobuf::uint64 value) {
  set_has_timeinusermodems();
  timeinusermodems_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.timeInUserModeMs)
}

// optional uint64 vmUsageBytes = 5;
inline bool ProcessInfo::has_vmusagebytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProcessInfo::set_has_vmusagebytes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProcessInfo::clear_has_vmusagebytes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProcessInfo::clear_vmusagebytes() {
  vmusagebytes_ = GOOGLE_ULONGLONG(0);
  clear_has_vmusagebytes();
}
inline ::google::protobuf::uint64 ProcessInfo::vmusagebytes() const {
  // @@protoc_insertion_point(field_get:ProcessInfo.vmUsageBytes)
  return vmusagebytes_;
}
inline void ProcessInfo::set_vmusagebytes(::google::protobuf::uint64 value) {
  set_has_vmusagebytes();
  vmusagebytes_ = value;
  // @@protoc_insertion_point(field_set:ProcessInfo.vmUsageBytes)
}

// repeated .ThreadInfo threads = 7;
inline int ProcessInfo::threads_size() const {
  return threads_.size();
}
inline void ProcessInfo::clear_threads() {
  threads_.Clear();
}
inline const ::ThreadInfo& ProcessInfo::threads(int index) const {
  // @@protoc_insertion_point(field_get:ProcessInfo.threads)
  return threads_.Get(index);
}
inline ::ThreadInfo* ProcessInfo::mutable_threads(int index) {
  // @@protoc_insertion_point(field_mutable:ProcessInfo.threads)
  return threads_.Mutable(index);
}
inline ::ThreadInfo* ProcessInfo::add_threads() {
  // @@protoc_insertion_point(field_add:ProcessInfo.threads)
  return threads_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ThreadInfo >*
ProcessInfo::mutable_threads() {
  // @@protoc_insertion_point(field_mutable_list:ProcessInfo.threads)
  return &threads_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ThreadInfo >&
ProcessInfo::threads() const {
  // @@protoc_insertion_point(field_list:ProcessInfo.threads)
  return threads_;
}

// -------------------------------------------------------------------

// ThreadInfo

// required int64 tid = 1;
inline bool ThreadInfo::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThreadInfo::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThreadInfo::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThreadInfo::clear_tid() {
  tid_ = GOOGLE_LONGLONG(0);
  clear_has_tid();
}
inline ::google::protobuf::int64 ThreadInfo::tid() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.tid)
  return tid_;
}
inline void ThreadInfo::set_tid(::google::protobuf::int64 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.tid)
}

// required string name = 2;
inline bool ThreadInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ThreadInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ThreadInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ThreadInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ThreadInfo::name() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThreadInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ThreadInfo.name)
}
inline void ThreadInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ThreadInfo.name)
}
inline void ThreadInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ThreadInfo.name)
}
inline ::std::string* ThreadInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ThreadInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ThreadInfo::release_name() {
  // @@protoc_insertion_point(field_release:ThreadInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThreadInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ThreadInfo.name)
}

// optional uint64 timeInKernelModeMs = 3;
inline bool ThreadInfo::has_timeinkernelmodems() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ThreadInfo::set_has_timeinkernelmodems() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ThreadInfo::clear_has_timeinkernelmodems() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ThreadInfo::clear_timeinkernelmodems() {
  timeinkernelmodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinkernelmodems();
}
inline ::google::protobuf::uint64 ThreadInfo::timeinkernelmodems() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.timeInKernelModeMs)
  return timeinkernelmodems_;
}
inline void ThreadInfo::set_timeinkernelmodems(::google::protobuf::uint64 value) {
  set_has_timeinkernelmodems();
  timeinkernelmodems_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.timeInKernelModeMs)
}

// optional uint64 timeInUserModeMs = 4;
inline bool ThreadInfo::has_timeinusermodems() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ThreadInfo::set_has_timeinusermodems() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ThreadInfo::clear_has_timeinusermodems() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ThreadInfo::clear_timeinusermodems() {
  timeinusermodems_ = GOOGLE_ULONGLONG(0);
  clear_has_timeinusermodems();
}
inline ::google::protobuf::uint64 ThreadInfo::timeinusermodems() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.timeInUserModeMs)
  return timeinusermodems_;
}
inline void ThreadInfo::set_timeinusermodems(::google::protobuf::uint64 value) {
  set_has_timeinusermodems();
  timeinusermodems_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.timeInUserModeMs)
}

// optional uint64 vmBytes = 5;
inline bool ThreadInfo::has_vmbytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ThreadInfo::set_has_vmbytes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ThreadInfo::clear_has_vmbytes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ThreadInfo::clear_vmbytes() {
  vmbytes_ = GOOGLE_ULONGLONG(0);
  clear_has_vmbytes();
}
inline ::google::protobuf::uint64 ThreadInfo::vmbytes() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.vmBytes)
  return vmbytes_;
}
inline void ThreadInfo::set_vmbytes(::google::protobuf::uint64 value) {
  set_has_vmbytes();
  vmbytes_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.vmBytes)
}

// optional string state = 6;
inline bool ThreadInfo::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ThreadInfo::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ThreadInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ThreadInfo::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
inline const ::std::string& ThreadInfo::state() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.state)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThreadInfo::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ThreadInfo.state)
}
inline void ThreadInfo::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ThreadInfo.state)
}
inline void ThreadInfo::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ThreadInfo.state)
}
inline ::std::string* ThreadInfo::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:ThreadInfo.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ThreadInfo::release_state() {
  // @@protoc_insertion_point(field_release:ThreadInfo.state)
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThreadInfo::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:ThreadInfo.state)
}

// optional uint64 timestamp = 7;
inline bool ThreadInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ThreadInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ThreadInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ThreadInfo::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 ThreadInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.timestamp)
  return timestamp_;
}
inline void ThreadInfo::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.timestamp)
}

// optional int32 priority = 8;
inline bool ThreadInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ThreadInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ThreadInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ThreadInfo::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 ThreadInfo::priority() const {
  // @@protoc_insertion_point(field_get:ThreadInfo.priority)
  return priority_;
}
inline void ThreadInfo::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:ThreadInfo.priority)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_target_5fagent_5fprot_5fresource_5fmonitor_2eproto__INCLUDED
