// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_dbus_monitor.proto

#ifndef PROTOBUF_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto__INCLUDED
#define PROTOBUF_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2007000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

class DBusApplicationMessage;
class DBusEvtTraceMessage;
class DBusMessageHeader;
class DBusMessagePayload;
class DBusMessagePayloadCompositeItem;
class DBusMessagePayloadItem;

enum DBusCommandResultCode {
  DBUS_CMD_RESULT_INVALID = 0,
  DBUS_CMD_RESULT_SUCCESS = 1,
  DBUS_CMD_RESULT_PARAM_WRONG = 2,
  DBUS_CMD_RESULT_EXEC_ERROR = 3,
  DBUS_CMD_RESULT_PARSE_ERROR = 4,
  DBUS_CMD_RESULT_CMD_SPECIFIC = 5
};
bool DBusCommandResultCode_IsValid(int value);
const DBusCommandResultCode DBusCommandResultCode_MIN = DBUS_CMD_RESULT_INVALID;
const DBusCommandResultCode DBusCommandResultCode_MAX = DBUS_CMD_RESULT_CMD_SPECIFIC;
const int DBusCommandResultCode_ARRAYSIZE = DBusCommandResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* DBusCommandResultCode_descriptor();
inline const ::std::string& DBusCommandResultCode_Name(DBusCommandResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    DBusCommandResultCode_descriptor(), value);
}
inline bool DBusCommandResultCode_Parse(
    const ::std::string& name, DBusCommandResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DBusCommandResultCode>(
    DBusCommandResultCode_descriptor(), name, value);
}
enum DBusInstanceType {
  DBUS_INSTACE_INVALID = 0,
  DBUS_INSTANCE_SESSION_BUS = 1,
  DBUS_INSTANCE_SYSTEM_BUS = 2,
  DBUS_INSTANCE_OTHER = 3
};
bool DBusInstanceType_IsValid(int value);
const DBusInstanceType DBusInstanceType_MIN = DBUS_INSTACE_INVALID;
const DBusInstanceType DBusInstanceType_MAX = DBUS_INSTANCE_OTHER;
const int DBusInstanceType_ARRAYSIZE = DBusInstanceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DBusInstanceType_descriptor();
inline const ::std::string& DBusInstanceType_Name(DBusInstanceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DBusInstanceType_descriptor(), value);
}
inline bool DBusInstanceType_Parse(
    const ::std::string& name, DBusInstanceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DBusInstanceType>(
    DBusInstanceType_descriptor(), name, value);
}
enum DBusTraceMessageType {
  DBUS_MSG_TYPE_INVALID = 0,
  DBUS_MSG_TYPE_METHOD_CALL = 1,
  DBUS_MSG_TYPE_METHOD_RETURN = 2,
  DBUS_MSG_TYPE_SIGNAL = 3,
  DBUS_MSG_TYPE_ERROR = 4
};
bool DBusTraceMessageType_IsValid(int value);
const DBusTraceMessageType DBusTraceMessageType_MIN = DBUS_MSG_TYPE_INVALID;
const DBusTraceMessageType DBusTraceMessageType_MAX = DBUS_MSG_TYPE_ERROR;
const int DBusTraceMessageType_ARRAYSIZE = DBusTraceMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DBusTraceMessageType_descriptor();
inline const ::std::string& DBusTraceMessageType_Name(DBusTraceMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DBusTraceMessageType_descriptor(), value);
}
inline bool DBusTraceMessageType_Parse(
    const ::std::string& name, DBusTraceMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DBusTraceMessageType>(
    DBusTraceMessageType_descriptor(), name, value);
}
enum DBusParamType {
  DBUS_MSG_PARAM_TYPE_INVALID = 0,
  DBUS_MSG_PARAM_TYPE_BYTE = 1,
  DBUS_MSG_PARAM_TYPE_BOOLEAN = 2,
  DBUS_MSG_PARAM_TYPE_INT16 = 3,
  DBUS_MSG_PARAM_TYPE_UINT16 = 4,
  DBUS_MSG_PARAM_TYPE_INT32 = 5,
  DBUS_MSG_PARAM_TYPE_UINT32 = 6,
  DBUS_MSG_PARAM_TYPE_INT64 = 7,
  DBUS_MSG_PARAM_TYPE_UINT64 = 8,
  DBUS_MSG_PARAM_TYPE_DOUBLE = 9,
  DBUS_MSG_PARAM_TYPE_STRING = 10,
  DBUS_MSG_PARAM_TYPE_OBJ_PATH = 11,
  DBUS_MSG_PARAM_TYPE_SIGNATURE = 12,
  DBUS_MSG_PARAM_TYPE_ARRAY = 13,
  DBUS_MSG_PARAM_TYPE_STRUCT = 14,
  DBUS_MSG_PARAM_TYPE_VARIANT = 15,
  DBUS_MSG_PARAM_TYPE_DICT_ENTRY = 16,
  DBUS_MSG_PARAM_TYPE_UNIX_FD = 17
};
bool DBusParamType_IsValid(int value);
const DBusParamType DBusParamType_MIN = DBUS_MSG_PARAM_TYPE_INVALID;
const DBusParamType DBusParamType_MAX = DBUS_MSG_PARAM_TYPE_UNIX_FD;
const int DBusParamType_ARRAYSIZE = DBusParamType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DBusParamType_descriptor();
inline const ::std::string& DBusParamType_Name(DBusParamType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DBusParamType_descriptor(), value);
}
inline bool DBusParamType_Parse(
    const ::std::string& name, DBusParamType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DBusParamType>(
    DBusParamType_descriptor(), name, value);
}
// ===================================================================

class DBusApplicationMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBusApplicationMessage) */ {
 public:
  DBusApplicationMessage();
  virtual ~DBusApplicationMessage();

  DBusApplicationMessage(const DBusApplicationMessage& from);

  inline DBusApplicationMessage& operator=(const DBusApplicationMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBusApplicationMessage& default_instance();

  void Swap(DBusApplicationMessage* other);

  // implements Message ----------------------------------------------

  inline DBusApplicationMessage* New() const { return New(NULL); }

  DBusApplicationMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBusApplicationMessage& from);
  void MergeFrom(const DBusApplicationMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBusApplicationMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DBusEvtTraceMessage traceMessage = 9;
  bool has_tracemessage() const;
  void clear_tracemessage();
  static const int kTraceMessageFieldNumber = 9;
  const ::DBusEvtTraceMessage& tracemessage() const;
  ::DBusEvtTraceMessage* mutable_tracemessage();
  ::DBusEvtTraceMessage* release_tracemessage();
  void set_allocated_tracemessage(::DBusEvtTraceMessage* tracemessage);

  // @@protoc_insertion_point(class_scope:DBusApplicationMessage)
 private:
  inline void set_has_tracemessage();
  inline void clear_has_tracemessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DBusEvtTraceMessage* tracemessage_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static DBusApplicationMessage* default_instance_;
};
// -------------------------------------------------------------------

class DBusEvtTraceMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBusEvtTraceMessage) */ {
 public:
  DBusEvtTraceMessage();
  virtual ~DBusEvtTraceMessage();

  DBusEvtTraceMessage(const DBusEvtTraceMessage& from);

  inline DBusEvtTraceMessage& operator=(const DBusEvtTraceMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBusEvtTraceMessage& default_instance();

  void Swap(DBusEvtTraceMessage* other);

  // implements Message ----------------------------------------------

  inline DBusEvtTraceMessage* New() const { return New(NULL); }

  DBusEvtTraceMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBusEvtTraceMessage& from);
  void MergeFrom(const DBusEvtTraceMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBusEvtTraceMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DBusMessageHeader header = 2;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 2;
  const ::DBusMessageHeader& header() const;
  ::DBusMessageHeader* mutable_header();
  ::DBusMessageHeader* release_header();
  void set_allocated_header(::DBusMessageHeader* header);

  // optional .DBusMessagePayload payload = 3;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  const ::DBusMessagePayload& payload() const;
  ::DBusMessagePayload* mutable_payload();
  ::DBusMessagePayload* release_payload();
  void set_allocated_payload(::DBusMessagePayload* payload);

  // required .DBusInstanceType instance = 4;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 4;
  ::DBusInstanceType instance() const;
  void set_instance(::DBusInstanceType value);

  // @@protoc_insertion_point(class_scope:DBusEvtTraceMessage)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_payload();
  inline void clear_has_payload();
  inline void set_has_instance();
  inline void clear_has_instance();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::DBusMessageHeader* header_;
  ::DBusMessagePayload* payload_;
  int instance_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static DBusEvtTraceMessage* default_instance_;
};
// -------------------------------------------------------------------

class DBusMessageHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBusMessageHeader) */ {
 public:
  DBusMessageHeader();
  virtual ~DBusMessageHeader();

  DBusMessageHeader(const DBusMessageHeader& from);

  inline DBusMessageHeader& operator=(const DBusMessageHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBusMessageHeader& default_instance();

  void Swap(DBusMessageHeader* other);

  // implements Message ----------------------------------------------

  inline DBusMessageHeader* New() const { return New(NULL); }

  DBusMessageHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBusMessageHeader& from);
  void MergeFrom(const DBusMessageHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBusMessageHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DBusTraceMessageType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::DBusTraceMessageType type() const;
  void set_type(::DBusTraceMessageType value);

  // optional string sender = 2;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // optional string receiver = 3;
  bool has_receiver() const;
  void clear_receiver();
  static const int kReceiverFieldNumber = 3;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  void set_receiver(const char* value);
  void set_receiver(const char* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // optional int32 sender_pid = 4;
  bool has_sender_pid() const;
  void clear_sender_pid();
  static const int kSenderPidFieldNumber = 4;
  ::google::protobuf::int32 sender_pid() const;
  void set_sender_pid(::google::protobuf::int32 value);

  // optional int32 receiver_pid = 5;
  bool has_receiver_pid() const;
  void clear_receiver_pid();
  static const int kReceiverPidFieldNumber = 5;
  ::google::protobuf::int32 receiver_pid() const;
  void set_receiver_pid(::google::protobuf::int32 value);

  // optional int32 sender_user_id = 6;
  bool has_sender_user_id() const;
  void clear_sender_user_id();
  static const int kSenderUserIdFieldNumber = 6;
  ::google::protobuf::int32 sender_user_id() const;
  void set_sender_user_id(::google::protobuf::int32 value);

  // optional int32 receiver_user_id = 7;
  bool has_receiver_user_id() const;
  void clear_receiver_user_id();
  static const int kReceiverUserIdFieldNumber = 7;
  ::google::protobuf::int32 receiver_user_id() const;
  void set_receiver_user_id(::google::protobuf::int32 value);

  // repeated string sender_alias_names = 8;
  int sender_alias_names_size() const;
  void clear_sender_alias_names();
  static const int kSenderAliasNamesFieldNumber = 8;
  const ::std::string& sender_alias_names(int index) const;
  ::std::string* mutable_sender_alias_names(int index);
  void set_sender_alias_names(int index, const ::std::string& value);
  void set_sender_alias_names(int index, const char* value);
  void set_sender_alias_names(int index, const char* value, size_t size);
  ::std::string* add_sender_alias_names();
  void add_sender_alias_names(const ::std::string& value);
  void add_sender_alias_names(const char* value);
  void add_sender_alias_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& sender_alias_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sender_alias_names();

  // repeated string receiver_alias_names = 9;
  int receiver_alias_names_size() const;
  void clear_receiver_alias_names();
  static const int kReceiverAliasNamesFieldNumber = 9;
  const ::std::string& receiver_alias_names(int index) const;
  ::std::string* mutable_receiver_alias_names(int index);
  void set_receiver_alias_names(int index, const ::std::string& value);
  void set_receiver_alias_names(int index, const char* value);
  void set_receiver_alias_names(int index, const char* value, size_t size);
  ::std::string* add_receiver_alias_names();
  void add_receiver_alias_names(const ::std::string& value);
  void add_receiver_alias_names(const char* value);
  void add_receiver_alias_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& receiver_alias_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_receiver_alias_names();

  // optional int32 serial = 10;
  bool has_serial() const;
  void clear_serial();
  static const int kSerialFieldNumber = 10;
  ::google::protobuf::int32 serial() const;
  void set_serial(::google::protobuf::int32 value);

  // optional string path = 11;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 11;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string interface = 12;
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 12;
  const ::std::string& interface() const;
  void set_interface(const ::std::string& value);
  void set_interface(const char* value);
  void set_interface(const char* value, size_t size);
  ::std::string* mutable_interface();
  ::std::string* release_interface();
  void set_allocated_interface(::std::string* interface);

  // optional string member = 13;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 13;
  const ::std::string& member() const;
  void set_member(const ::std::string& value);
  void set_member(const char* value);
  void set_member(const char* value, size_t size);
  ::std::string* mutable_member();
  ::std::string* release_member();
  void set_allocated_member(::std::string* member);

  // optional string property = 14;
  bool has_property() const;
  void clear_property();
  static const int kPropertyFieldNumber = 14;
  const ::std::string& property() const;
  void set_property(const ::std::string& value);
  void set_property(const char* value);
  void set_property(const char* value, size_t size);
  ::std::string* mutable_property();
  ::std::string* release_property();
  void set_allocated_property(::std::string* property);

  // optional int32 reply_serial = 15;
  bool has_reply_serial() const;
  void clear_reply_serial();
  static const int kReplySerialFieldNumber = 15;
  ::google::protobuf::int32 reply_serial() const;
  void set_reply_serial(::google::protobuf::int32 value);

  // optional string error_name = 16;
  bool has_error_name() const;
  void clear_error_name();
  static const int kErrorNameFieldNumber = 16;
  const ::std::string& error_name() const;
  void set_error_name(const ::std::string& value);
  void set_error_name(const char* value);
  void set_error_name(const char* value, size_t size);
  ::std::string* mutable_error_name();
  ::std::string* release_error_name();
  void set_allocated_error_name(::std::string* error_name);

  // optional string method_signature = 17;
  bool has_method_signature() const;
  void clear_method_signature();
  static const int kMethodSignatureFieldNumber = 17;
  const ::std::string& method_signature() const;
  void set_method_signature(const ::std::string& value);
  void set_method_signature(const char* value);
  void set_method_signature(const char* value, size_t size);
  ::std::string* mutable_method_signature();
  ::std::string* release_method_signature();
  void set_allocated_method_signature(::std::string* method_signature);

  // optional string sender_process_name = 18;
  bool has_sender_process_name() const;
  void clear_sender_process_name();
  static const int kSenderProcessNameFieldNumber = 18;
  const ::std::string& sender_process_name() const;
  void set_sender_process_name(const ::std::string& value);
  void set_sender_process_name(const char* value);
  void set_sender_process_name(const char* value, size_t size);
  ::std::string* mutable_sender_process_name();
  ::std::string* release_sender_process_name();
  void set_allocated_sender_process_name(::std::string* sender_process_name);

  // optional string receiver_process_name = 19;
  bool has_receiver_process_name() const;
  void clear_receiver_process_name();
  static const int kReceiverProcessNameFieldNumber = 19;
  const ::std::string& receiver_process_name() const;
  void set_receiver_process_name(const ::std::string& value);
  void set_receiver_process_name(const char* value);
  void set_receiver_process_name(const char* value, size_t size);
  ::std::string* mutable_receiver_process_name();
  ::std::string* release_receiver_process_name();
  void set_allocated_receiver_process_name(::std::string* receiver_process_name);

  // @@protoc_insertion_point(class_scope:DBusMessageHeader)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_receiver();
  inline void clear_has_receiver();
  inline void set_has_sender_pid();
  inline void clear_has_sender_pid();
  inline void set_has_receiver_pid();
  inline void clear_has_receiver_pid();
  inline void set_has_sender_user_id();
  inline void clear_has_sender_user_id();
  inline void set_has_receiver_user_id();
  inline void clear_has_receiver_user_id();
  inline void set_has_serial();
  inline void clear_has_serial();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_interface();
  inline void clear_has_interface();
  inline void set_has_member();
  inline void clear_has_member();
  inline void set_has_property();
  inline void clear_has_property();
  inline void set_has_reply_serial();
  inline void clear_has_reply_serial();
  inline void set_has_error_name();
  inline void clear_has_error_name();
  inline void set_has_method_signature();
  inline void clear_has_method_signature();
  inline void set_has_sender_process_name();
  inline void clear_has_sender_process_name();
  inline void set_has_receiver_process_name();
  inline void clear_has_receiver_process_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  int type_;
  ::google::protobuf::int32 sender_pid_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::int32 receiver_pid_;
  ::google::protobuf::int32 sender_user_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sender_alias_names_;
  ::google::protobuf::int32 receiver_user_id_;
  ::google::protobuf::int32 serial_;
  ::google::protobuf::RepeatedPtrField< ::std::string> receiver_alias_names_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr interface_;
  ::google::protobuf::internal::ArenaStringPtr member_;
  ::google::protobuf::internal::ArenaStringPtr property_;
  ::google::protobuf::internal::ArenaStringPtr error_name_;
  ::google::protobuf::internal::ArenaStringPtr method_signature_;
  ::google::protobuf::internal::ArenaStringPtr sender_process_name_;
  ::google::protobuf::internal::ArenaStringPtr receiver_process_name_;
  ::google::protobuf::int32 reply_serial_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static DBusMessageHeader* default_instance_;
};
// -------------------------------------------------------------------

class DBusMessagePayload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBusMessagePayload) */ {
 public:
  DBusMessagePayload();
  virtual ~DBusMessagePayload();

  DBusMessagePayload(const DBusMessagePayload& from);

  inline DBusMessagePayload& operator=(const DBusMessagePayload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBusMessagePayload& default_instance();

  void Swap(DBusMessagePayload* other);

  // implements Message ----------------------------------------------

  inline DBusMessagePayload* New() const { return New(NULL); }

  DBusMessagePayload* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBusMessagePayload& from);
  void MergeFrom(const DBusMessagePayload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBusMessagePayload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBusMessagePayloadItem param = 1;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  const ::DBusMessagePayloadItem& param(int index) const;
  ::DBusMessagePayloadItem* mutable_param(int index);
  ::DBusMessagePayloadItem* add_param();
  ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >*
      mutable_param();
  const ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >&
      param() const;

  // @@protoc_insertion_point(class_scope:DBusMessagePayload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem > param_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static DBusMessagePayload* default_instance_;
};
// -------------------------------------------------------------------

class DBusMessagePayloadItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBusMessagePayloadItem) */ {
 public:
  DBusMessagePayloadItem();
  virtual ~DBusMessagePayloadItem();

  DBusMessagePayloadItem(const DBusMessagePayloadItem& from);

  inline DBusMessagePayloadItem& operator=(const DBusMessagePayloadItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBusMessagePayloadItem& default_instance();

  void Swap(DBusMessagePayloadItem* other);

  // implements Message ----------------------------------------------

  inline DBusMessagePayloadItem* New() const { return New(NULL); }

  DBusMessagePayloadItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBusMessagePayloadItem& from);
  void MergeFrom(const DBusMessagePayloadItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBusMessagePayloadItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DBusParamType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::DBusParamType type() const;
  void set_type(::DBusParamType value);

  // optional int64 int_val = 2;
  bool has_int_val() const;
  void clear_int_val();
  static const int kIntValFieldNumber = 2;
  ::google::protobuf::int64 int_val() const;
  void set_int_val(::google::protobuf::int64 value);

  // optional uint64 uint_val = 3;
  bool has_uint_val() const;
  void clear_uint_val();
  static const int kUintValFieldNumber = 3;
  ::google::protobuf::uint64 uint_val() const;
  void set_uint_val(::google::protobuf::uint64 value);

  // optional double double_val = 4;
  bool has_double_val() const;
  void clear_double_val();
  static const int kDoubleValFieldNumber = 4;
  double double_val() const;
  void set_double_val(double value);

  // optional string str_val = 5;
  bool has_str_val() const;
  void clear_str_val();
  static const int kStrValFieldNumber = 5;
  const ::std::string& str_val() const;
  void set_str_val(const ::std::string& value);
  void set_str_val(const char* value);
  void set_str_val(const char* value, size_t size);
  ::std::string* mutable_str_val();
  ::std::string* release_str_val();
  void set_allocated_str_val(::std::string* str_val);

  // optional .DBusMessagePayloadCompositeItem composite_val = 6;
  bool has_composite_val() const;
  void clear_composite_val();
  static const int kCompositeValFieldNumber = 6;
  const ::DBusMessagePayloadCompositeItem& composite_val() const;
  ::DBusMessagePayloadCompositeItem* mutable_composite_val();
  ::DBusMessagePayloadCompositeItem* release_composite_val();
  void set_allocated_composite_val(::DBusMessagePayloadCompositeItem* composite_val);

  // @@protoc_insertion_point(class_scope:DBusMessagePayloadItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_int_val();
  inline void clear_has_int_val();
  inline void set_has_uint_val();
  inline void clear_has_uint_val();
  inline void set_has_double_val();
  inline void clear_has_double_val();
  inline void set_has_str_val();
  inline void clear_has_str_val();
  inline void set_has_composite_val();
  inline void clear_has_composite_val();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 int_val_;
  ::google::protobuf::uint64 uint_val_;
  double double_val_;
  ::google::protobuf::internal::ArenaStringPtr str_val_;
  ::DBusMessagePayloadCompositeItem* composite_val_;
  int type_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static DBusMessagePayloadItem* default_instance_;
};
// -------------------------------------------------------------------

class DBusMessagePayloadCompositeItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBusMessagePayloadCompositeItem) */ {
 public:
  DBusMessagePayloadCompositeItem();
  virtual ~DBusMessagePayloadCompositeItem();

  DBusMessagePayloadCompositeItem(const DBusMessagePayloadCompositeItem& from);

  inline DBusMessagePayloadCompositeItem& operator=(const DBusMessagePayloadCompositeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBusMessagePayloadCompositeItem& default_instance();

  void Swap(DBusMessagePayloadCompositeItem* other);

  // implements Message ----------------------------------------------

  inline DBusMessagePayloadCompositeItem* New() const { return New(NULL); }

  DBusMessagePayloadCompositeItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBusMessagePayloadCompositeItem& from);
  void MergeFrom(const DBusMessagePayloadCompositeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBusMessagePayloadCompositeItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBusMessagePayloadItem param = 1;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 1;
  const ::DBusMessagePayloadItem& param(int index) const;
  ::DBusMessagePayloadItem* mutable_param(int index);
  ::DBusMessagePayloadItem* add_param();
  ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >*
      mutable_param();
  const ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >&
      param() const;

  // @@protoc_insertion_point(class_scope:DBusMessagePayloadCompositeItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem > param_;
  friend void  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();

  void InitAsDefaultInstance();
  static DBusMessagePayloadCompositeItem* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusApplicationMessage

// optional .DBusEvtTraceMessage traceMessage = 9;
inline bool DBusApplicationMessage::has_tracemessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBusApplicationMessage::set_has_tracemessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBusApplicationMessage::clear_has_tracemessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBusApplicationMessage::clear_tracemessage() {
  if (tracemessage_ != NULL) tracemessage_->::DBusEvtTraceMessage::Clear();
  clear_has_tracemessage();
}
inline const ::DBusEvtTraceMessage& DBusApplicationMessage::tracemessage() const {
  // @@protoc_insertion_point(field_get:DBusApplicationMessage.traceMessage)
  return tracemessage_ != NULL ? *tracemessage_ : *default_instance_->tracemessage_;
}
inline ::DBusEvtTraceMessage* DBusApplicationMessage::mutable_tracemessage() {
  set_has_tracemessage();
  if (tracemessage_ == NULL) {
    tracemessage_ = new ::DBusEvtTraceMessage;
  }
  // @@protoc_insertion_point(field_mutable:DBusApplicationMessage.traceMessage)
  return tracemessage_;
}
inline ::DBusEvtTraceMessage* DBusApplicationMessage::release_tracemessage() {
  // @@protoc_insertion_point(field_release:DBusApplicationMessage.traceMessage)
  clear_has_tracemessage();
  ::DBusEvtTraceMessage* temp = tracemessage_;
  tracemessage_ = NULL;
  return temp;
}
inline void DBusApplicationMessage::set_allocated_tracemessage(::DBusEvtTraceMessage* tracemessage) {
  delete tracemessage_;
  tracemessage_ = tracemessage;
  if (tracemessage) {
    set_has_tracemessage();
  } else {
    clear_has_tracemessage();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusApplicationMessage.traceMessage)
}

// -------------------------------------------------------------------

// DBusEvtTraceMessage

// required .DBusMessageHeader header = 2;
inline bool DBusEvtTraceMessage::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBusEvtTraceMessage::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBusEvtTraceMessage::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBusEvtTraceMessage::clear_header() {
  if (header_ != NULL) header_->::DBusMessageHeader::Clear();
  clear_has_header();
}
inline const ::DBusMessageHeader& DBusEvtTraceMessage::header() const {
  // @@protoc_insertion_point(field_get:DBusEvtTraceMessage.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::DBusMessageHeader* DBusEvtTraceMessage::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::DBusMessageHeader;
  }
  // @@protoc_insertion_point(field_mutable:DBusEvtTraceMessage.header)
  return header_;
}
inline ::DBusMessageHeader* DBusEvtTraceMessage::release_header() {
  // @@protoc_insertion_point(field_release:DBusEvtTraceMessage.header)
  clear_has_header();
  ::DBusMessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DBusEvtTraceMessage::set_allocated_header(::DBusMessageHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusEvtTraceMessage.header)
}

// optional .DBusMessagePayload payload = 3;
inline bool DBusEvtTraceMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBusEvtTraceMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBusEvtTraceMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBusEvtTraceMessage::clear_payload() {
  if (payload_ != NULL) payload_->::DBusMessagePayload::Clear();
  clear_has_payload();
}
inline const ::DBusMessagePayload& DBusEvtTraceMessage::payload() const {
  // @@protoc_insertion_point(field_get:DBusEvtTraceMessage.payload)
  return payload_ != NULL ? *payload_ : *default_instance_->payload_;
}
inline ::DBusMessagePayload* DBusEvtTraceMessage::mutable_payload() {
  set_has_payload();
  if (payload_ == NULL) {
    payload_ = new ::DBusMessagePayload;
  }
  // @@protoc_insertion_point(field_mutable:DBusEvtTraceMessage.payload)
  return payload_;
}
inline ::DBusMessagePayload* DBusEvtTraceMessage::release_payload() {
  // @@protoc_insertion_point(field_release:DBusEvtTraceMessage.payload)
  clear_has_payload();
  ::DBusMessagePayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline void DBusEvtTraceMessage::set_allocated_payload(::DBusMessagePayload* payload) {
  delete payload_;
  payload_ = payload;
  if (payload) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusEvtTraceMessage.payload)
}

// required .DBusInstanceType instance = 4;
inline bool DBusEvtTraceMessage::has_instance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBusEvtTraceMessage::set_has_instance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBusEvtTraceMessage::clear_has_instance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBusEvtTraceMessage::clear_instance() {
  instance_ = 0;
  clear_has_instance();
}
inline ::DBusInstanceType DBusEvtTraceMessage::instance() const {
  // @@protoc_insertion_point(field_get:DBusEvtTraceMessage.instance)
  return static_cast< ::DBusInstanceType >(instance_);
}
inline void DBusEvtTraceMessage::set_instance(::DBusInstanceType value) {
  assert(::DBusInstanceType_IsValid(value));
  set_has_instance();
  instance_ = value;
  // @@protoc_insertion_point(field_set:DBusEvtTraceMessage.instance)
}

// -------------------------------------------------------------------

// DBusMessageHeader

// required .DBusTraceMessageType type = 1;
inline bool DBusMessageHeader::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBusMessageHeader::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBusMessageHeader::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBusMessageHeader::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::DBusTraceMessageType DBusMessageHeader::type() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.type)
  return static_cast< ::DBusTraceMessageType >(type_);
}
inline void DBusMessageHeader::set_type(::DBusTraceMessageType value) {
  assert(::DBusTraceMessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.type)
}

// optional string sender = 2;
inline bool DBusMessageHeader::has_sender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBusMessageHeader::set_has_sender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBusMessageHeader::clear_has_sender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBusMessageHeader::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender();
}
inline const ::std::string& DBusMessageHeader::sender() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_sender(const ::std::string& value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender)
}
inline void DBusMessageHeader::set_sender(const char* value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.sender)
}
inline void DBusMessageHeader::set_sender(const char* value, size_t size) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.sender)
}
inline ::std::string* DBusMessageHeader::mutable_sender() {
  set_has_sender();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_sender() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.sender)
  clear_has_sender();
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    set_has_sender();
  } else {
    clear_has_sender();
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.sender)
}

// optional string receiver = 3;
inline bool DBusMessageHeader::has_receiver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBusMessageHeader::set_has_receiver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBusMessageHeader::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBusMessageHeader::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver();
}
inline const ::std::string& DBusMessageHeader::receiver() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_receiver(const ::std::string& value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver)
}
inline void DBusMessageHeader::set_receiver(const char* value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.receiver)
}
inline void DBusMessageHeader::set_receiver(const char* value, size_t size) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.receiver)
}
inline ::std::string* DBusMessageHeader::mutable_receiver() {
  set_has_receiver();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_receiver() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.receiver)
  clear_has_receiver();
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    set_has_receiver();
  } else {
    clear_has_receiver();
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.receiver)
}

// optional int32 sender_pid = 4;
inline bool DBusMessageHeader::has_sender_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBusMessageHeader::set_has_sender_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBusMessageHeader::clear_has_sender_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBusMessageHeader::clear_sender_pid() {
  sender_pid_ = 0;
  clear_has_sender_pid();
}
inline ::google::protobuf::int32 DBusMessageHeader::sender_pid() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_pid)
  return sender_pid_;
}
inline void DBusMessageHeader::set_sender_pid(::google::protobuf::int32 value) {
  set_has_sender_pid();
  sender_pid_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_pid)
}

// optional int32 receiver_pid = 5;
inline bool DBusMessageHeader::has_receiver_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBusMessageHeader::set_has_receiver_pid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBusMessageHeader::clear_has_receiver_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBusMessageHeader::clear_receiver_pid() {
  receiver_pid_ = 0;
  clear_has_receiver_pid();
}
inline ::google::protobuf::int32 DBusMessageHeader::receiver_pid() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_pid)
  return receiver_pid_;
}
inline void DBusMessageHeader::set_receiver_pid(::google::protobuf::int32 value) {
  set_has_receiver_pid();
  receiver_pid_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_pid)
}

// optional int32 sender_user_id = 6;
inline bool DBusMessageHeader::has_sender_user_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBusMessageHeader::set_has_sender_user_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBusMessageHeader::clear_has_sender_user_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBusMessageHeader::clear_sender_user_id() {
  sender_user_id_ = 0;
  clear_has_sender_user_id();
}
inline ::google::protobuf::int32 DBusMessageHeader::sender_user_id() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_user_id)
  return sender_user_id_;
}
inline void DBusMessageHeader::set_sender_user_id(::google::protobuf::int32 value) {
  set_has_sender_user_id();
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_user_id)
}

// optional int32 receiver_user_id = 7;
inline bool DBusMessageHeader::has_receiver_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBusMessageHeader::set_has_receiver_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBusMessageHeader::clear_has_receiver_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBusMessageHeader::clear_receiver_user_id() {
  receiver_user_id_ = 0;
  clear_has_receiver_user_id();
}
inline ::google::protobuf::int32 DBusMessageHeader::receiver_user_id() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_user_id)
  return receiver_user_id_;
}
inline void DBusMessageHeader::set_receiver_user_id(::google::protobuf::int32 value) {
  set_has_receiver_user_id();
  receiver_user_id_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_user_id)
}

// repeated string sender_alias_names = 8;
inline int DBusMessageHeader::sender_alias_names_size() const {
  return sender_alias_names_.size();
}
inline void DBusMessageHeader::clear_sender_alias_names() {
  sender_alias_names_.Clear();
}
inline const ::std::string& DBusMessageHeader::sender_alias_names(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_.Get(index);
}
inline ::std::string* DBusMessageHeader::mutable_sender_alias_names(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_.Mutable(index);
}
inline void DBusMessageHeader::set_sender_alias_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_alias_names)
  sender_alias_names_.Mutable(index)->assign(value);
}
inline void DBusMessageHeader::set_sender_alias_names(int index, const char* value) {
  sender_alias_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.sender_alias_names)
}
inline void DBusMessageHeader::set_sender_alias_names(int index, const char* value, size_t size) {
  sender_alias_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.sender_alias_names)
}
inline ::std::string* DBusMessageHeader::add_sender_alias_names() {
  // @@protoc_insertion_point(field_add_mutable:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_.Add();
}
inline void DBusMessageHeader::add_sender_alias_names(const ::std::string& value) {
  sender_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DBusMessageHeader.sender_alias_names)
}
inline void DBusMessageHeader::add_sender_alias_names(const char* value) {
  sender_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DBusMessageHeader.sender_alias_names)
}
inline void DBusMessageHeader::add_sender_alias_names(const char* value, size_t size) {
  sender_alias_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DBusMessageHeader.sender_alias_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DBusMessageHeader::sender_alias_names() const {
  // @@protoc_insertion_point(field_list:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DBusMessageHeader::mutable_sender_alias_names() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessageHeader.sender_alias_names)
  return &sender_alias_names_;
}

// repeated string receiver_alias_names = 9;
inline int DBusMessageHeader::receiver_alias_names_size() const {
  return receiver_alias_names_.size();
}
inline void DBusMessageHeader::clear_receiver_alias_names() {
  receiver_alias_names_.Clear();
}
inline const ::std::string& DBusMessageHeader::receiver_alias_names(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_.Get(index);
}
inline ::std::string* DBusMessageHeader::mutable_receiver_alias_names(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_.Mutable(index);
}
inline void DBusMessageHeader::set_receiver_alias_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_alias_names)
  receiver_alias_names_.Mutable(index)->assign(value);
}
inline void DBusMessageHeader::set_receiver_alias_names(int index, const char* value) {
  receiver_alias_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.receiver_alias_names)
}
inline void DBusMessageHeader::set_receiver_alias_names(int index, const char* value, size_t size) {
  receiver_alias_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.receiver_alias_names)
}
inline ::std::string* DBusMessageHeader::add_receiver_alias_names() {
  // @@protoc_insertion_point(field_add_mutable:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_.Add();
}
inline void DBusMessageHeader::add_receiver_alias_names(const ::std::string& value) {
  receiver_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DBusMessageHeader.receiver_alias_names)
}
inline void DBusMessageHeader::add_receiver_alias_names(const char* value) {
  receiver_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DBusMessageHeader.receiver_alias_names)
}
inline void DBusMessageHeader::add_receiver_alias_names(const char* value, size_t size) {
  receiver_alias_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DBusMessageHeader.receiver_alias_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DBusMessageHeader::receiver_alias_names() const {
  // @@protoc_insertion_point(field_list:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DBusMessageHeader::mutable_receiver_alias_names() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessageHeader.receiver_alias_names)
  return &receiver_alias_names_;
}

// optional int32 serial = 10;
inline bool DBusMessageHeader::has_serial() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBusMessageHeader::set_has_serial() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBusMessageHeader::clear_has_serial() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBusMessageHeader::clear_serial() {
  serial_ = 0;
  clear_has_serial();
}
inline ::google::protobuf::int32 DBusMessageHeader::serial() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.serial)
  return serial_;
}
inline void DBusMessageHeader::set_serial(::google::protobuf::int32 value) {
  set_has_serial();
  serial_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.serial)
}

// optional string path = 11;
inline bool DBusMessageHeader::has_path() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBusMessageHeader::set_has_path() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBusMessageHeader::clear_has_path() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBusMessageHeader::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& DBusMessageHeader::path() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.path)
}
inline void DBusMessageHeader::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.path)
}
inline void DBusMessageHeader::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.path)
}
inline ::std::string* DBusMessageHeader::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_path() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.path)
}

// optional string interface = 12;
inline bool DBusMessageHeader::has_interface() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DBusMessageHeader::set_has_interface() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DBusMessageHeader::clear_has_interface() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DBusMessageHeader::clear_interface() {
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_interface();
}
inline const ::std::string& DBusMessageHeader::interface() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.interface)
  return interface_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_interface(const ::std::string& value) {
  set_has_interface();
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.interface)
}
inline void DBusMessageHeader::set_interface(const char* value) {
  set_has_interface();
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.interface)
}
inline void DBusMessageHeader::set_interface(const char* value, size_t size) {
  set_has_interface();
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.interface)
}
inline ::std::string* DBusMessageHeader::mutable_interface() {
  set_has_interface();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.interface)
  return interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_interface() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.interface)
  clear_has_interface();
  return interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_interface(::std::string* interface) {
  if (interface != NULL) {
    set_has_interface();
  } else {
    clear_has_interface();
  }
  interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.interface)
}

// optional string member = 13;
inline bool DBusMessageHeader::has_member() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DBusMessageHeader::set_has_member() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DBusMessageHeader::clear_has_member() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DBusMessageHeader::clear_member() {
  member_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_member();
}
inline const ::std::string& DBusMessageHeader::member() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.member)
  return member_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_member(const ::std::string& value) {
  set_has_member();
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.member)
}
inline void DBusMessageHeader::set_member(const char* value) {
  set_has_member();
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.member)
}
inline void DBusMessageHeader::set_member(const char* value, size_t size) {
  set_has_member();
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.member)
}
inline ::std::string* DBusMessageHeader::mutable_member() {
  set_has_member();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.member)
  return member_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_member() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.member)
  clear_has_member();
  return member_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_member(::std::string* member) {
  if (member != NULL) {
    set_has_member();
  } else {
    clear_has_member();
  }
  member_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), member);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.member)
}

// optional string property = 14;
inline bool DBusMessageHeader::has_property() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DBusMessageHeader::set_has_property() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DBusMessageHeader::clear_has_property() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DBusMessageHeader::clear_property() {
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_property();
}
inline const ::std::string& DBusMessageHeader::property() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.property)
  return property_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_property(const ::std::string& value) {
  set_has_property();
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.property)
}
inline void DBusMessageHeader::set_property(const char* value) {
  set_has_property();
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.property)
}
inline void DBusMessageHeader::set_property(const char* value, size_t size) {
  set_has_property();
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.property)
}
inline ::std::string* DBusMessageHeader::mutable_property() {
  set_has_property();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.property)
  return property_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_property() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.property)
  clear_has_property();
  return property_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_property(::std::string* property) {
  if (property != NULL) {
    set_has_property();
  } else {
    clear_has_property();
  }
  property_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.property)
}

// optional int32 reply_serial = 15;
inline bool DBusMessageHeader::has_reply_serial() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DBusMessageHeader::set_has_reply_serial() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DBusMessageHeader::clear_has_reply_serial() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DBusMessageHeader::clear_reply_serial() {
  reply_serial_ = 0;
  clear_has_reply_serial();
}
inline ::google::protobuf::int32 DBusMessageHeader::reply_serial() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.reply_serial)
  return reply_serial_;
}
inline void DBusMessageHeader::set_reply_serial(::google::protobuf::int32 value) {
  set_has_reply_serial();
  reply_serial_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.reply_serial)
}

// optional string error_name = 16;
inline bool DBusMessageHeader::has_error_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DBusMessageHeader::set_has_error_name() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DBusMessageHeader::clear_has_error_name() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DBusMessageHeader::clear_error_name() {
  error_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_name();
}
inline const ::std::string& DBusMessageHeader::error_name() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.error_name)
  return error_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_error_name(const ::std::string& value) {
  set_has_error_name();
  error_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.error_name)
}
inline void DBusMessageHeader::set_error_name(const char* value) {
  set_has_error_name();
  error_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.error_name)
}
inline void DBusMessageHeader::set_error_name(const char* value, size_t size) {
  set_has_error_name();
  error_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.error_name)
}
inline ::std::string* DBusMessageHeader::mutable_error_name() {
  set_has_error_name();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.error_name)
  return error_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_error_name() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.error_name)
  clear_has_error_name();
  return error_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_error_name(::std::string* error_name) {
  if (error_name != NULL) {
    set_has_error_name();
  } else {
    clear_has_error_name();
  }
  error_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_name);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.error_name)
}

// optional string method_signature = 17;
inline bool DBusMessageHeader::has_method_signature() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DBusMessageHeader::set_has_method_signature() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DBusMessageHeader::clear_has_method_signature() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DBusMessageHeader::clear_method_signature() {
  method_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_signature();
}
inline const ::std::string& DBusMessageHeader::method_signature() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.method_signature)
  return method_signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_method_signature(const ::std::string& value) {
  set_has_method_signature();
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.method_signature)
}
inline void DBusMessageHeader::set_method_signature(const char* value) {
  set_has_method_signature();
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.method_signature)
}
inline void DBusMessageHeader::set_method_signature(const char* value, size_t size) {
  set_has_method_signature();
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.method_signature)
}
inline ::std::string* DBusMessageHeader::mutable_method_signature() {
  set_has_method_signature();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.method_signature)
  return method_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_method_signature() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.method_signature)
  clear_has_method_signature();
  return method_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_method_signature(::std::string* method_signature) {
  if (method_signature != NULL) {
    set_has_method_signature();
  } else {
    clear_has_method_signature();
  }
  method_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_signature);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.method_signature)
}

// optional string sender_process_name = 18;
inline bool DBusMessageHeader::has_sender_process_name() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DBusMessageHeader::set_has_sender_process_name() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DBusMessageHeader::clear_has_sender_process_name() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DBusMessageHeader::clear_sender_process_name() {
  sender_process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_process_name();
}
inline const ::std::string& DBusMessageHeader::sender_process_name() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_process_name)
  return sender_process_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_sender_process_name(const ::std::string& value) {
  set_has_sender_process_name();
  sender_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_process_name)
}
inline void DBusMessageHeader::set_sender_process_name(const char* value) {
  set_has_sender_process_name();
  sender_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.sender_process_name)
}
inline void DBusMessageHeader::set_sender_process_name(const char* value, size_t size) {
  set_has_sender_process_name();
  sender_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.sender_process_name)
}
inline ::std::string* DBusMessageHeader::mutable_sender_process_name() {
  set_has_sender_process_name();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.sender_process_name)
  return sender_process_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_sender_process_name() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.sender_process_name)
  clear_has_sender_process_name();
  return sender_process_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_sender_process_name(::std::string* sender_process_name) {
  if (sender_process_name != NULL) {
    set_has_sender_process_name();
  } else {
    clear_has_sender_process_name();
  }
  sender_process_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_process_name);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.sender_process_name)
}

// optional string receiver_process_name = 19;
inline bool DBusMessageHeader::has_receiver_process_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DBusMessageHeader::set_has_receiver_process_name() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DBusMessageHeader::clear_has_receiver_process_name() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DBusMessageHeader::clear_receiver_process_name() {
  receiver_process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver_process_name();
}
inline const ::std::string& DBusMessageHeader::receiver_process_name() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_process_name)
  return receiver_process_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_receiver_process_name(const ::std::string& value) {
  set_has_receiver_process_name();
  receiver_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_process_name)
}
inline void DBusMessageHeader::set_receiver_process_name(const char* value) {
  set_has_receiver_process_name();
  receiver_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.receiver_process_name)
}
inline void DBusMessageHeader::set_receiver_process_name(const char* value, size_t size) {
  set_has_receiver_process_name();
  receiver_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.receiver_process_name)
}
inline ::std::string* DBusMessageHeader::mutable_receiver_process_name() {
  set_has_receiver_process_name();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.receiver_process_name)
  return receiver_process_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessageHeader::release_receiver_process_name() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.receiver_process_name)
  clear_has_receiver_process_name();
  return receiver_process_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessageHeader::set_allocated_receiver_process_name(::std::string* receiver_process_name) {
  if (receiver_process_name != NULL) {
    set_has_receiver_process_name();
  } else {
    clear_has_receiver_process_name();
  }
  receiver_process_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver_process_name);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.receiver_process_name)
}

// -------------------------------------------------------------------

// DBusMessagePayload

// repeated .DBusMessagePayloadItem param = 1;
inline int DBusMessagePayload::param_size() const {
  return param_.size();
}
inline void DBusMessagePayload::clear_param() {
  param_.Clear();
}
inline const ::DBusMessagePayloadItem& DBusMessagePayload::param(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessagePayload.param)
  return param_.Get(index);
}
inline ::DBusMessagePayloadItem* DBusMessagePayload::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessagePayload.param)
  return param_.Mutable(index);
}
inline ::DBusMessagePayloadItem* DBusMessagePayload::add_param() {
  // @@protoc_insertion_point(field_add:DBusMessagePayload.param)
  return param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >*
DBusMessagePayload::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessagePayload.param)
  return &param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >&
DBusMessagePayload::param() const {
  // @@protoc_insertion_point(field_list:DBusMessagePayload.param)
  return param_;
}

// -------------------------------------------------------------------

// DBusMessagePayloadItem

// required .DBusParamType type = 1;
inline bool DBusMessagePayloadItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBusMessagePayloadItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBusMessagePayloadItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBusMessagePayloadItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::DBusParamType DBusMessagePayloadItem::type() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.type)
  return static_cast< ::DBusParamType >(type_);
}
inline void DBusMessagePayloadItem::set_type(::DBusParamType value) {
  assert(::DBusParamType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.type)
}

// optional int64 int_val = 2;
inline bool DBusMessagePayloadItem::has_int_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBusMessagePayloadItem::set_has_int_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBusMessagePayloadItem::clear_has_int_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBusMessagePayloadItem::clear_int_val() {
  int_val_ = GOOGLE_LONGLONG(0);
  clear_has_int_val();
}
inline ::google::protobuf::int64 DBusMessagePayloadItem::int_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.int_val)
  return int_val_;
}
inline void DBusMessagePayloadItem::set_int_val(::google::protobuf::int64 value) {
  set_has_int_val();
  int_val_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.int_val)
}

// optional uint64 uint_val = 3;
inline bool DBusMessagePayloadItem::has_uint_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBusMessagePayloadItem::set_has_uint_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBusMessagePayloadItem::clear_has_uint_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBusMessagePayloadItem::clear_uint_val() {
  uint_val_ = GOOGLE_ULONGLONG(0);
  clear_has_uint_val();
}
inline ::google::protobuf::uint64 DBusMessagePayloadItem::uint_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.uint_val)
  return uint_val_;
}
inline void DBusMessagePayloadItem::set_uint_val(::google::protobuf::uint64 value) {
  set_has_uint_val();
  uint_val_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.uint_val)
}

// optional double double_val = 4;
inline bool DBusMessagePayloadItem::has_double_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBusMessagePayloadItem::set_has_double_val() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBusMessagePayloadItem::clear_has_double_val() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBusMessagePayloadItem::clear_double_val() {
  double_val_ = 0;
  clear_has_double_val();
}
inline double DBusMessagePayloadItem::double_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.double_val)
  return double_val_;
}
inline void DBusMessagePayloadItem::set_double_val(double value) {
  set_has_double_val();
  double_val_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.double_val)
}

// optional string str_val = 5;
inline bool DBusMessagePayloadItem::has_str_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBusMessagePayloadItem::set_has_str_val() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBusMessagePayloadItem::clear_has_str_val() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBusMessagePayloadItem::clear_str_val() {
  str_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str_val();
}
inline const ::std::string& DBusMessagePayloadItem::str_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.str_val)
  return str_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessagePayloadItem::set_str_val(const ::std::string& value) {
  set_has_str_val();
  str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.str_val)
}
inline void DBusMessagePayloadItem::set_str_val(const char* value) {
  set_has_str_val();
  str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessagePayloadItem.str_val)
}
inline void DBusMessagePayloadItem::set_str_val(const char* value, size_t size) {
  set_has_str_val();
  str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessagePayloadItem.str_val)
}
inline ::std::string* DBusMessagePayloadItem::mutable_str_val() {
  set_has_str_val();
  // @@protoc_insertion_point(field_mutable:DBusMessagePayloadItem.str_val)
  return str_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBusMessagePayloadItem::release_str_val() {
  // @@protoc_insertion_point(field_release:DBusMessagePayloadItem.str_val)
  clear_has_str_val();
  return str_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBusMessagePayloadItem::set_allocated_str_val(::std::string* str_val) {
  if (str_val != NULL) {
    set_has_str_val();
  } else {
    clear_has_str_val();
  }
  str_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_val);
  // @@protoc_insertion_point(field_set_allocated:DBusMessagePayloadItem.str_val)
}

// optional .DBusMessagePayloadCompositeItem composite_val = 6;
inline bool DBusMessagePayloadItem::has_composite_val() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBusMessagePayloadItem::set_has_composite_val() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBusMessagePayloadItem::clear_has_composite_val() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBusMessagePayloadItem::clear_composite_val() {
  if (composite_val_ != NULL) composite_val_->::DBusMessagePayloadCompositeItem::Clear();
  clear_has_composite_val();
}
inline const ::DBusMessagePayloadCompositeItem& DBusMessagePayloadItem::composite_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.composite_val)
  return composite_val_ != NULL ? *composite_val_ : *default_instance_->composite_val_;
}
inline ::DBusMessagePayloadCompositeItem* DBusMessagePayloadItem::mutable_composite_val() {
  set_has_composite_val();
  if (composite_val_ == NULL) {
    composite_val_ = new ::DBusMessagePayloadCompositeItem;
  }
  // @@protoc_insertion_point(field_mutable:DBusMessagePayloadItem.composite_val)
  return composite_val_;
}
inline ::DBusMessagePayloadCompositeItem* DBusMessagePayloadItem::release_composite_val() {
  // @@protoc_insertion_point(field_release:DBusMessagePayloadItem.composite_val)
  clear_has_composite_val();
  ::DBusMessagePayloadCompositeItem* temp = composite_val_;
  composite_val_ = NULL;
  return temp;
}
inline void DBusMessagePayloadItem::set_allocated_composite_val(::DBusMessagePayloadCompositeItem* composite_val) {
  delete composite_val_;
  composite_val_ = composite_val;
  if (composite_val) {
    set_has_composite_val();
  } else {
    clear_has_composite_val();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusMessagePayloadItem.composite_val)
}

// -------------------------------------------------------------------

// DBusMessagePayloadCompositeItem

// repeated .DBusMessagePayloadItem param = 1;
inline int DBusMessagePayloadCompositeItem::param_size() const {
  return param_.size();
}
inline void DBusMessagePayloadCompositeItem::clear_param() {
  param_.Clear();
}
inline const ::DBusMessagePayloadItem& DBusMessagePayloadCompositeItem::param(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadCompositeItem.param)
  return param_.Get(index);
}
inline ::DBusMessagePayloadItem* DBusMessagePayloadCompositeItem::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessagePayloadCompositeItem.param)
  return param_.Mutable(index);
}
inline ::DBusMessagePayloadItem* DBusMessagePayloadCompositeItem::add_param() {
  // @@protoc_insertion_point(field_add:DBusMessagePayloadCompositeItem.param)
  return param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >*
DBusMessagePayloadCompositeItem::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessagePayloadCompositeItem.param)
  return &param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >&
DBusMessagePayloadCompositeItem::param() const {
  // @@protoc_insertion_point(field_list:DBusMessagePayloadCompositeItem.param)
  return param_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DBusCommandResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DBusCommandResultCode>() {
  return ::DBusCommandResultCode_descriptor();
}
template <> struct is_proto_enum< ::DBusInstanceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DBusInstanceType>() {
  return ::DBusInstanceType_descriptor();
}
template <> struct is_proto_enum< ::DBusTraceMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DBusTraceMessageType>() {
  return ::DBusTraceMessageType_descriptor();
}
template <> struct is_proto_enum< ::DBusParamType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DBusParamType>() {
  return ::DBusParamType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto__INCLUDED
