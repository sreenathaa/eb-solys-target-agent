// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_dbus_monitor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "target_agent_prot_dbus_monitor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DBusApplicationMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBusApplicationMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBusEvtTraceMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBusEvtTraceMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBusMessageHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBusMessageHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBusMessagePayload_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBusMessagePayload_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBusMessagePayloadItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBusMessagePayloadItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBusMessagePayloadCompositeItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBusMessagePayloadCompositeItem_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DBusCommandResultCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DBusInstanceType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DBusTraceMessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DBusParamType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto() {
  protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "target_agent_prot_dbus_monitor.proto");
  GOOGLE_CHECK(file != NULL);
  DBusApplicationMessage_descriptor_ = file->message_type(0);
  static const int DBusApplicationMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusApplicationMessage, tracemessage_),
  };
  DBusApplicationMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBusApplicationMessage_descriptor_,
      DBusApplicationMessage::default_instance_,
      DBusApplicationMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusApplicationMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBusApplicationMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusApplicationMessage, _internal_metadata_),
      -1);
  DBusEvtTraceMessage_descriptor_ = file->message_type(1);
  static const int DBusEvtTraceMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusEvtTraceMessage, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusEvtTraceMessage, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusEvtTraceMessage, instance_),
  };
  DBusEvtTraceMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBusEvtTraceMessage_descriptor_,
      DBusEvtTraceMessage::default_instance_,
      DBusEvtTraceMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusEvtTraceMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBusEvtTraceMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusEvtTraceMessage, _internal_metadata_),
      -1);
  DBusMessageHeader_descriptor_ = file->message_type(2);
  static const int DBusMessageHeader_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, sender_pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, receiver_pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, sender_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, receiver_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, sender_alias_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, receiver_alias_names_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, serial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, interface_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, property_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, reply_serial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, error_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, method_signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, sender_process_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, receiver_process_name_),
  };
  DBusMessageHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBusMessageHeader_descriptor_,
      DBusMessageHeader::default_instance_,
      DBusMessageHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBusMessageHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessageHeader, _internal_metadata_),
      -1);
  DBusMessagePayload_descriptor_ = file->message_type(3);
  static const int DBusMessagePayload_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayload, param_),
  };
  DBusMessagePayload_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBusMessagePayload_descriptor_,
      DBusMessagePayload::default_instance_,
      DBusMessagePayload_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayload, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBusMessagePayload),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayload, _internal_metadata_),
      -1);
  DBusMessagePayloadItem_descriptor_ = file->message_type(4);
  static const int DBusMessagePayloadItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, int_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, uint_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, double_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, str_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, composite_val_),
  };
  DBusMessagePayloadItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBusMessagePayloadItem_descriptor_,
      DBusMessagePayloadItem::default_instance_,
      DBusMessagePayloadItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBusMessagePayloadItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadItem, _internal_metadata_),
      -1);
  DBusMessagePayloadCompositeItem_descriptor_ = file->message_type(5);
  static const int DBusMessagePayloadCompositeItem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadCompositeItem, param_),
  };
  DBusMessagePayloadCompositeItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBusMessagePayloadCompositeItem_descriptor_,
      DBusMessagePayloadCompositeItem::default_instance_,
      DBusMessagePayloadCompositeItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadCompositeItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBusMessagePayloadCompositeItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBusMessagePayloadCompositeItem, _internal_metadata_),
      -1);
  DBusCommandResultCode_descriptor_ = file->enum_type(0);
  DBusInstanceType_descriptor_ = file->enum_type(1);
  DBusTraceMessageType_descriptor_ = file->enum_type(2);
  DBusParamType_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBusApplicationMessage_descriptor_, &DBusApplicationMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBusEvtTraceMessage_descriptor_, &DBusEvtTraceMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBusMessageHeader_descriptor_, &DBusMessageHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBusMessagePayload_descriptor_, &DBusMessagePayload::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBusMessagePayloadItem_descriptor_, &DBusMessagePayloadItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBusMessagePayloadCompositeItem_descriptor_, &DBusMessagePayloadCompositeItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto() {
  delete DBusApplicationMessage::default_instance_;
  delete DBusApplicationMessage_reflection_;
  delete DBusEvtTraceMessage::default_instance_;
  delete DBusEvtTraceMessage_reflection_;
  delete DBusMessageHeader::default_instance_;
  delete DBusMessageHeader_reflection_;
  delete DBusMessagePayload::default_instance_;
  delete DBusMessagePayload_reflection_;
  delete DBusMessagePayloadItem::default_instance_;
  delete DBusMessagePayloadItem_reflection_;
  delete DBusMessagePayloadCompositeItem::default_instance_;
  delete DBusMessagePayloadCompositeItem_reflection_;
}

void protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$target_agent_prot_dbus_monitor.proto\"D"
    "\n\026DBusApplicationMessage\022*\n\014traceMessage"
    "\030\t \001(\0132\024.DBusEvtTraceMessage\"\204\001\n\023DBusEvt"
    "TraceMessage\022\"\n\006header\030\002 \002(\0132\022.DBusMessa"
    "geHeader\022$\n\007payload\030\003 \001(\0132\023.DBusMessageP"
    "ayload\022#\n\010instance\030\004 \002(\0162\021.DBusInstanceT"
    "ype\"\303\003\n\021DBusMessageHeader\022#\n\004type\030\001 \002(\0162"
    "\025.DBusTraceMessageType\022\016\n\006sender\030\002 \001(\t\022\020"
    "\n\010receiver\030\003 \001(\t\022\022\n\nsender_pid\030\004 \001(\005\022\024\n\014"
    "receiver_pid\030\005 \001(\005\022\026\n\016sender_user_id\030\006 \001"
    "(\005\022\030\n\020receiver_user_id\030\007 \001(\005\022\032\n\022sender_a"
    "lias_names\030\010 \003(\t\022\034\n\024receiver_alias_names"
    "\030\t \003(\t\022\016\n\006serial\030\n \001(\005\022\014\n\004path\030\013 \001(\t\022\021\n\t"
    "interface\030\014 \001(\t\022\016\n\006member\030\r \001(\t\022\020\n\010prope"
    "rty\030\016 \001(\t\022\024\n\014reply_serial\030\017 \001(\005\022\022\n\nerror"
    "_name\030\020 \001(\t\022\030\n\020method_signature\030\021 \001(\t\022\033\n"
    "\023sender_process_name\030\022 \001(\t\022\035\n\025receiver_p"
    "rocess_name\030\023 \001(\t\"<\n\022DBusMessagePayload\022"
    "&\n\005param\030\001 \003(\0132\027.DBusMessagePayloadItem\""
    "\267\001\n\026DBusMessagePayloadItem\022\034\n\004type\030\001 \002(\016"
    "2\016.DBusParamType\022\017\n\007int_val\030\002 \001(\003\022\020\n\010uin"
    "t_val\030\003 \001(\004\022\022\n\ndouble_val\030\004 \001(\001\022\017\n\007str_v"
    "al\030\005 \001(\t\0227\n\rcomposite_val\030\006 \001(\0132 .DBusMe"
    "ssagePayloadCompositeItem\"I\n\037DBusMessage"
    "PayloadCompositeItem\022&\n\005param\030\001 \003(\0132\027.DB"
    "usMessagePayloadItem*\325\001\n\025DBusCommandResu"
    "ltCode\022\033\n\027DBUS_CMD_RESULT_INVALID\020\000\022\033\n\027D"
    "BUS_CMD_RESULT_SUCCESS\020\001\022\037\n\033DBUS_CMD_RES"
    "ULT_PARAM_WRONG\020\002\022\036\n\032DBUS_CMD_RESULT_EXE"
    "C_ERROR\020\003\022\037\n\033DBUS_CMD_RESULT_PARSE_ERROR"
    "\020\004\022 \n\034DBUS_CMD_RESULT_CMD_SPECIFIC\020\005*\202\001\n"
    "\020DBusInstanceType\022\030\n\024DBUS_INSTACE_INVALI"
    "D\020\000\022\035\n\031DBUS_INSTANCE_SESSION_BUS\020\001\022\034\n\030DB"
    "US_INSTANCE_SYSTEM_BUS\020\002\022\027\n\023DBUS_INSTANC"
    "E_OTHER\020\003*\244\001\n\024DBusTraceMessageType\022\031\n\025DB"
    "US_MSG_TYPE_INVALID\020\000\022\035\n\031DBUS_MSG_TYPE_M"
    "ETHOD_CALL\020\001\022\037\n\033DBUS_MSG_TYPE_METHOD_RET"
    "URN\020\002\022\030\n\024DBUS_MSG_TYPE_SIGNAL\020\003\022\027\n\023DBUS_"
    "MSG_TYPE_ERROR\020\004*\326\004\n\rDBusParamType\022\037\n\033DB"
    "US_MSG_PARAM_TYPE_INVALID\020\000\022\034\n\030DBUS_MSG_"
    "PARAM_TYPE_BYTE\020\001\022\037\n\033DBUS_MSG_PARAM_TYPE"
    "_BOOLEAN\020\002\022\035\n\031DBUS_MSG_PARAM_TYPE_INT16\020"
    "\003\022\036\n\032DBUS_MSG_PARAM_TYPE_UINT16\020\004\022\035\n\031DBU"
    "S_MSG_PARAM_TYPE_INT32\020\005\022\036\n\032DBUS_MSG_PAR"
    "AM_TYPE_UINT32\020\006\022\035\n\031DBUS_MSG_PARAM_TYPE_"
    "INT64\020\007\022\036\n\032DBUS_MSG_PARAM_TYPE_UINT64\020\010\022"
    "\036\n\032DBUS_MSG_PARAM_TYPE_DOUBLE\020\t\022\036\n\032DBUS_"
    "MSG_PARAM_TYPE_STRING\020\n\022 \n\034DBUS_MSG_PARA"
    "M_TYPE_OBJ_PATH\020\013\022!\n\035DBUS_MSG_PARAM_TYPE"
    "_SIGNATURE\020\014\022\035\n\031DBUS_MSG_PARAM_TYPE_ARRA"
    "Y\020\r\022\036\n\032DBUS_MSG_PARAM_TYPE_STRUCT\020\016\022\037\n\033D"
    "BUS_MSG_PARAM_TYPE_VARIANT\020\017\022\"\n\036DBUS_MSG"
    "_PARAM_TYPE_DICT_ENTRY\020\020\022\037\n\033DBUS_MSG_PAR"
    "AM_TYPE_UNIX_FD\020\021BS\n1com.elektrobit.ebra"
    "ce.protobuf.messagedefinitionsB\036TargetAg"
    "entProtocolDBusTAProto", 2222);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "target_agent_prot_dbus_monitor.proto", &protobuf_RegisterTypes);
  DBusApplicationMessage::default_instance_ = new DBusApplicationMessage();
  DBusEvtTraceMessage::default_instance_ = new DBusEvtTraceMessage();
  DBusMessageHeader::default_instance_ = new DBusMessageHeader();
  DBusMessagePayload::default_instance_ = new DBusMessagePayload();
  DBusMessagePayloadItem::default_instance_ = new DBusMessagePayloadItem();
  DBusMessagePayloadCompositeItem::default_instance_ = new DBusMessagePayloadCompositeItem();
  DBusApplicationMessage::default_instance_->InitAsDefaultInstance();
  DBusEvtTraceMessage::default_instance_->InitAsDefaultInstance();
  DBusMessageHeader::default_instance_->InitAsDefaultInstance();
  DBusMessagePayload::default_instance_->InitAsDefaultInstance();
  DBusMessagePayloadItem::default_instance_->InitAsDefaultInstance();
  DBusMessagePayloadCompositeItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto {
  StaticDescriptorInitializer_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto() {
    protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  }
} static_descriptor_initializer_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto_;
const ::google::protobuf::EnumDescriptor* DBusCommandResultCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusCommandResultCode_descriptor_;
}
bool DBusCommandResultCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DBusInstanceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusInstanceType_descriptor_;
}
bool DBusInstanceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DBusTraceMessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusTraceMessageType_descriptor_;
}
bool DBusTraceMessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DBusParamType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusParamType_descriptor_;
}
bool DBusParamType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBusApplicationMessage::kTraceMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBusApplicationMessage::DBusApplicationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBusApplicationMessage)
}

void DBusApplicationMessage::InitAsDefaultInstance() {
  tracemessage_ = const_cast< ::DBusEvtTraceMessage*>(&::DBusEvtTraceMessage::default_instance());
}

DBusApplicationMessage::DBusApplicationMessage(const DBusApplicationMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBusApplicationMessage)
}

void DBusApplicationMessage::SharedCtor() {
  _cached_size_ = 0;
  tracemessage_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBusApplicationMessage::~DBusApplicationMessage() {
  // @@protoc_insertion_point(destructor:DBusApplicationMessage)
  SharedDtor();
}

void DBusApplicationMessage::SharedDtor() {
  if (this != default_instance_) {
    delete tracemessage_;
  }
}

void DBusApplicationMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBusApplicationMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusApplicationMessage_descriptor_;
}

const DBusApplicationMessage& DBusApplicationMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  return *default_instance_;
}

DBusApplicationMessage* DBusApplicationMessage::default_instance_ = NULL;

DBusApplicationMessage* DBusApplicationMessage::New(::google::protobuf::Arena* arena) const {
  DBusApplicationMessage* n = new DBusApplicationMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBusApplicationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DBusApplicationMessage)
  if (has_tracemessage()) {
    if (tracemessage_ != NULL) tracemessage_->::DBusEvtTraceMessage::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBusApplicationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBusApplicationMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DBusEvtTraceMessage traceMessage = 9;
      case 9: {
        if (tag == 74) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tracemessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBusApplicationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBusApplicationMessage)
  return false;
#undef DO_
}

void DBusApplicationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBusApplicationMessage)
  // optional .DBusEvtTraceMessage traceMessage = 9;
  if (has_tracemessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->tracemessage_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DBusApplicationMessage)
}

::google::protobuf::uint8* DBusApplicationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBusApplicationMessage)
  // optional .DBusEvtTraceMessage traceMessage = 9;
  if (has_tracemessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->tracemessage_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBusApplicationMessage)
  return target;
}

int DBusApplicationMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBusApplicationMessage)
  int total_size = 0;

  // optional .DBusEvtTraceMessage traceMessage = 9;
  if (has_tracemessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tracemessage_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBusApplicationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBusApplicationMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBusApplicationMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBusApplicationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBusApplicationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBusApplicationMessage)
    MergeFrom(*source);
  }
}

void DBusApplicationMessage::MergeFrom(const DBusApplicationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBusApplicationMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tracemessage()) {
      mutable_tracemessage()->::DBusEvtTraceMessage::MergeFrom(from.tracemessage());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBusApplicationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBusApplicationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBusApplicationMessage::CopyFrom(const DBusApplicationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBusApplicationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBusApplicationMessage::IsInitialized() const {

  if (has_tracemessage()) {
    if (!this->tracemessage_->IsInitialized()) return false;
  }
  return true;
}

void DBusApplicationMessage::Swap(DBusApplicationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBusApplicationMessage::InternalSwap(DBusApplicationMessage* other) {
  std::swap(tracemessage_, other->tracemessage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBusApplicationMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBusApplicationMessage_descriptor_;
  metadata.reflection = DBusApplicationMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusApplicationMessage

// optional .DBusEvtTraceMessage traceMessage = 9;
bool DBusApplicationMessage::has_tracemessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DBusApplicationMessage::set_has_tracemessage() {
  _has_bits_[0] |= 0x00000001u;
}
void DBusApplicationMessage::clear_has_tracemessage() {
  _has_bits_[0] &= ~0x00000001u;
}
void DBusApplicationMessage::clear_tracemessage() {
  if (tracemessage_ != NULL) tracemessage_->::DBusEvtTraceMessage::Clear();
  clear_has_tracemessage();
}
const ::DBusEvtTraceMessage& DBusApplicationMessage::tracemessage() const {
  // @@protoc_insertion_point(field_get:DBusApplicationMessage.traceMessage)
  return tracemessage_ != NULL ? *tracemessage_ : *default_instance_->tracemessage_;
}
::DBusEvtTraceMessage* DBusApplicationMessage::mutable_tracemessage() {
  set_has_tracemessage();
  if (tracemessage_ == NULL) {
    tracemessage_ = new ::DBusEvtTraceMessage;
  }
  // @@protoc_insertion_point(field_mutable:DBusApplicationMessage.traceMessage)
  return tracemessage_;
}
::DBusEvtTraceMessage* DBusApplicationMessage::release_tracemessage() {
  // @@protoc_insertion_point(field_release:DBusApplicationMessage.traceMessage)
  clear_has_tracemessage();
  ::DBusEvtTraceMessage* temp = tracemessage_;
  tracemessage_ = NULL;
  return temp;
}
void DBusApplicationMessage::set_allocated_tracemessage(::DBusEvtTraceMessage* tracemessage) {
  delete tracemessage_;
  tracemessage_ = tracemessage;
  if (tracemessage) {
    set_has_tracemessage();
  } else {
    clear_has_tracemessage();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusApplicationMessage.traceMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBusEvtTraceMessage::kHeaderFieldNumber;
const int DBusEvtTraceMessage::kPayloadFieldNumber;
const int DBusEvtTraceMessage::kInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBusEvtTraceMessage::DBusEvtTraceMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBusEvtTraceMessage)
}

void DBusEvtTraceMessage::InitAsDefaultInstance() {
  header_ = const_cast< ::DBusMessageHeader*>(&::DBusMessageHeader::default_instance());
  payload_ = const_cast< ::DBusMessagePayload*>(&::DBusMessagePayload::default_instance());
}

DBusEvtTraceMessage::DBusEvtTraceMessage(const DBusEvtTraceMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBusEvtTraceMessage)
}

void DBusEvtTraceMessage::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  payload_ = NULL;
  instance_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBusEvtTraceMessage::~DBusEvtTraceMessage() {
  // @@protoc_insertion_point(destructor:DBusEvtTraceMessage)
  SharedDtor();
}

void DBusEvtTraceMessage::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete payload_;
  }
}

void DBusEvtTraceMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBusEvtTraceMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusEvtTraceMessage_descriptor_;
}

const DBusEvtTraceMessage& DBusEvtTraceMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  return *default_instance_;
}

DBusEvtTraceMessage* DBusEvtTraceMessage::default_instance_ = NULL;

DBusEvtTraceMessage* DBusEvtTraceMessage::New(::google::protobuf::Arena* arena) const {
  DBusEvtTraceMessage* n = new DBusEvtTraceMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBusEvtTraceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DBusEvtTraceMessage)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_header()) {
      if (header_ != NULL) header_->::DBusMessageHeader::Clear();
    }
    if (has_payload()) {
      if (payload_ != NULL) payload_->::DBusMessagePayload::Clear();
    }
    instance_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBusEvtTraceMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBusEvtTraceMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DBusMessageHeader header = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_payload;
        break;
      }

      // optional .DBusMessagePayload payload = 3;
      case 3: {
        if (tag == 26) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_instance;
        break;
      }

      // required .DBusInstanceType instance = 4;
      case 4: {
        if (tag == 32) {
         parse_instance:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DBusInstanceType_IsValid(value)) {
            set_instance(static_cast< ::DBusInstanceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBusEvtTraceMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBusEvtTraceMessage)
  return false;
#undef DO_
}

void DBusEvtTraceMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBusEvtTraceMessage)
  // required .DBusMessageHeader header = 2;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // optional .DBusMessagePayload payload = 3;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->payload_, output);
  }

  // required .DBusInstanceType instance = 4;
  if (has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->instance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DBusEvtTraceMessage)
}

::google::protobuf::uint8* DBusEvtTraceMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBusEvtTraceMessage)
  // required .DBusMessageHeader header = 2;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->header_, false, target);
  }

  // optional .DBusMessagePayload payload = 3;
  if (has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->payload_, false, target);
  }

  // required .DBusInstanceType instance = 4;
  if (has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->instance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBusEvtTraceMessage)
  return target;
}

int DBusEvtTraceMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DBusEvtTraceMessage)
  int total_size = 0;

  if (has_header()) {
    // required .DBusMessageHeader header = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  if (has_instance()) {
    // required .DBusInstanceType instance = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->instance());
  }

  return total_size;
}
int DBusEvtTraceMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBusEvtTraceMessage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required .DBusMessageHeader header = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);

    // required .DBusInstanceType instance = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->instance());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .DBusMessagePayload payload = 3;
  if (has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->payload_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBusEvtTraceMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBusEvtTraceMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBusEvtTraceMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBusEvtTraceMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBusEvtTraceMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBusEvtTraceMessage)
    MergeFrom(*source);
  }
}

void DBusEvtTraceMessage::MergeFrom(const DBusEvtTraceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBusEvtTraceMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::DBusMessageHeader::MergeFrom(from.header());
    }
    if (from.has_payload()) {
      mutable_payload()->::DBusMessagePayload::MergeFrom(from.payload());
    }
    if (from.has_instance()) {
      set_instance(from.instance());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBusEvtTraceMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBusEvtTraceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBusEvtTraceMessage::CopyFrom(const DBusEvtTraceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBusEvtTraceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBusEvtTraceMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  if (has_payload()) {
    if (!this->payload_->IsInitialized()) return false;
  }
  return true;
}

void DBusEvtTraceMessage::Swap(DBusEvtTraceMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBusEvtTraceMessage::InternalSwap(DBusEvtTraceMessage* other) {
  std::swap(header_, other->header_);
  std::swap(payload_, other->payload_);
  std::swap(instance_, other->instance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBusEvtTraceMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBusEvtTraceMessage_descriptor_;
  metadata.reflection = DBusEvtTraceMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusEvtTraceMessage

// required .DBusMessageHeader header = 2;
bool DBusEvtTraceMessage::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DBusEvtTraceMessage::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void DBusEvtTraceMessage::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void DBusEvtTraceMessage::clear_header() {
  if (header_ != NULL) header_->::DBusMessageHeader::Clear();
  clear_has_header();
}
const ::DBusMessageHeader& DBusEvtTraceMessage::header() const {
  // @@protoc_insertion_point(field_get:DBusEvtTraceMessage.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::DBusMessageHeader* DBusEvtTraceMessage::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::DBusMessageHeader;
  }
  // @@protoc_insertion_point(field_mutable:DBusEvtTraceMessage.header)
  return header_;
}
::DBusMessageHeader* DBusEvtTraceMessage::release_header() {
  // @@protoc_insertion_point(field_release:DBusEvtTraceMessage.header)
  clear_has_header();
  ::DBusMessageHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void DBusEvtTraceMessage::set_allocated_header(::DBusMessageHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusEvtTraceMessage.header)
}

// optional .DBusMessagePayload payload = 3;
bool DBusEvtTraceMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DBusEvtTraceMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
void DBusEvtTraceMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
void DBusEvtTraceMessage::clear_payload() {
  if (payload_ != NULL) payload_->::DBusMessagePayload::Clear();
  clear_has_payload();
}
const ::DBusMessagePayload& DBusEvtTraceMessage::payload() const {
  // @@protoc_insertion_point(field_get:DBusEvtTraceMessage.payload)
  return payload_ != NULL ? *payload_ : *default_instance_->payload_;
}
::DBusMessagePayload* DBusEvtTraceMessage::mutable_payload() {
  set_has_payload();
  if (payload_ == NULL) {
    payload_ = new ::DBusMessagePayload;
  }
  // @@protoc_insertion_point(field_mutable:DBusEvtTraceMessage.payload)
  return payload_;
}
::DBusMessagePayload* DBusEvtTraceMessage::release_payload() {
  // @@protoc_insertion_point(field_release:DBusEvtTraceMessage.payload)
  clear_has_payload();
  ::DBusMessagePayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
void DBusEvtTraceMessage::set_allocated_payload(::DBusMessagePayload* payload) {
  delete payload_;
  payload_ = payload;
  if (payload) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusEvtTraceMessage.payload)
}

// required .DBusInstanceType instance = 4;
bool DBusEvtTraceMessage::has_instance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DBusEvtTraceMessage::set_has_instance() {
  _has_bits_[0] |= 0x00000004u;
}
void DBusEvtTraceMessage::clear_has_instance() {
  _has_bits_[0] &= ~0x00000004u;
}
void DBusEvtTraceMessage::clear_instance() {
  instance_ = 0;
  clear_has_instance();
}
 ::DBusInstanceType DBusEvtTraceMessage::instance() const {
  // @@protoc_insertion_point(field_get:DBusEvtTraceMessage.instance)
  return static_cast< ::DBusInstanceType >(instance_);
}
 void DBusEvtTraceMessage::set_instance(::DBusInstanceType value) {
  assert(::DBusInstanceType_IsValid(value));
  set_has_instance();
  instance_ = value;
  // @@protoc_insertion_point(field_set:DBusEvtTraceMessage.instance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBusMessageHeader::kTypeFieldNumber;
const int DBusMessageHeader::kSenderFieldNumber;
const int DBusMessageHeader::kReceiverFieldNumber;
const int DBusMessageHeader::kSenderPidFieldNumber;
const int DBusMessageHeader::kReceiverPidFieldNumber;
const int DBusMessageHeader::kSenderUserIdFieldNumber;
const int DBusMessageHeader::kReceiverUserIdFieldNumber;
const int DBusMessageHeader::kSenderAliasNamesFieldNumber;
const int DBusMessageHeader::kReceiverAliasNamesFieldNumber;
const int DBusMessageHeader::kSerialFieldNumber;
const int DBusMessageHeader::kPathFieldNumber;
const int DBusMessageHeader::kInterfaceFieldNumber;
const int DBusMessageHeader::kMemberFieldNumber;
const int DBusMessageHeader::kPropertyFieldNumber;
const int DBusMessageHeader::kReplySerialFieldNumber;
const int DBusMessageHeader::kErrorNameFieldNumber;
const int DBusMessageHeader::kMethodSignatureFieldNumber;
const int DBusMessageHeader::kSenderProcessNameFieldNumber;
const int DBusMessageHeader::kReceiverProcessNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBusMessageHeader::DBusMessageHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBusMessageHeader)
}

void DBusMessageHeader::InitAsDefaultInstance() {
}

DBusMessageHeader::DBusMessageHeader(const DBusMessageHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBusMessageHeader)
}

void DBusMessageHeader::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_pid_ = 0;
  receiver_pid_ = 0;
  sender_user_id_ = 0;
  receiver_user_id_ = 0;
  serial_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reply_serial_ = 0;
  error_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_process_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_process_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBusMessageHeader::~DBusMessageHeader() {
  // @@protoc_insertion_point(destructor:DBusMessageHeader)
  SharedDtor();
}

void DBusMessageHeader::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_process_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_process_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DBusMessageHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBusMessageHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusMessageHeader_descriptor_;
}

const DBusMessageHeader& DBusMessageHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  return *default_instance_;
}

DBusMessageHeader* DBusMessageHeader::default_instance_ = NULL;

DBusMessageHeader* DBusMessageHeader::New(::google::protobuf::Arena* arena) const {
  DBusMessageHeader* n = new DBusMessageHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBusMessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:DBusMessageHeader)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBusMessageHeader, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBusMessageHeader*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(type_, sender_pid_);
    ZR_(receiver_pid_, sender_user_id_);
    if (has_sender()) {
      sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_receiver()) {
      receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    receiver_user_id_ = 0;
  }
  if (_has_bits_[8 / 32] & 65024u) {
    serial_ = 0;
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_interface()) {
      interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_member()) {
      member_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_property()) {
      property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    reply_serial_ = 0;
    if (has_error_name()) {
      error_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[16 / 32] & 458752u) {
    if (has_method_signature()) {
      method_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sender_process_name()) {
      sender_process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_receiver_process_name()) {
      receiver_process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  sender_alias_names_.Clear();
  receiver_alias_names_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBusMessageHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBusMessageHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DBusTraceMessageType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DBusTraceMessageType_IsValid(value)) {
            set_type(static_cast< ::DBusTraceMessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sender;
        break;
      }

      // optional string sender = 2;
      case 2: {
        if (tag == 18) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.sender");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_receiver;
        break;
      }

      // optional string receiver = 3;
      case 3: {
        if (tag == 26) {
         parse_receiver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receiver().data(), this->receiver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.receiver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sender_pid;
        break;
      }

      // optional int32 sender_pid = 4;
      case 4: {
        if (tag == 32) {
         parse_sender_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sender_pid_)));
          set_has_sender_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_receiver_pid;
        break;
      }

      // optional int32 receiver_pid = 5;
      case 5: {
        if (tag == 40) {
         parse_receiver_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receiver_pid_)));
          set_has_receiver_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sender_user_id;
        break;
      }

      // optional int32 sender_user_id = 6;
      case 6: {
        if (tag == 48) {
         parse_sender_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sender_user_id_)));
          set_has_sender_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_receiver_user_id;
        break;
      }

      // optional int32 receiver_user_id = 7;
      case 7: {
        if (tag == 56) {
         parse_receiver_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receiver_user_id_)));
          set_has_receiver_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sender_alias_names;
        break;
      }

      // repeated string sender_alias_names = 8;
      case 8: {
        if (tag == 66) {
         parse_sender_alias_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sender_alias_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_alias_names(this->sender_alias_names_size() - 1).data(),
            this->sender_alias_names(this->sender_alias_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.sender_alias_names");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sender_alias_names;
        if (input->ExpectTag(74)) goto parse_receiver_alias_names;
        break;
      }

      // repeated string receiver_alias_names = 9;
      case 9: {
        if (tag == 74) {
         parse_receiver_alias_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_receiver_alias_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receiver_alias_names(this->receiver_alias_names_size() - 1).data(),
            this->receiver_alias_names(this->receiver_alias_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.receiver_alias_names");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_receiver_alias_names;
        if (input->ExpectTag(80)) goto parse_serial;
        break;
      }

      // optional int32 serial = 10;
      case 10: {
        if (tag == 80) {
         parse_serial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serial_)));
          set_has_serial();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_path;
        break;
      }

      // optional string path = 11;
      case 11: {
        if (tag == 90) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_interface;
        break;
      }

      // optional string interface = 12;
      case 12: {
        if (tag == 98) {
         parse_interface:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interface().data(), this->interface().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.interface");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_member;
        break;
      }

      // optional string member = 13;
      case 13: {
        if (tag == 106) {
         parse_member:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_member()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->member().data(), this->member().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.member");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_property;
        break;
      }

      // optional string property = 14;
      case 14: {
        if (tag == 114) {
         parse_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->property().data(), this->property().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.property");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_reply_serial;
        break;
      }

      // optional int32 reply_serial = 15;
      case 15: {
        if (tag == 120) {
         parse_reply_serial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_serial_)));
          set_has_reply_serial();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_error_name;
        break;
      }

      // optional string error_name = 16;
      case 16: {
        if (tag == 130) {
         parse_error_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_name().data(), this->error_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.error_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_method_signature;
        break;
      }

      // optional string method_signature = 17;
      case 17: {
        if (tag == 138) {
         parse_method_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_signature().data(), this->method_signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.method_signature");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_sender_process_name;
        break;
      }

      // optional string sender_process_name = 18;
      case 18: {
        if (tag == 146) {
         parse_sender_process_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_process_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_process_name().data(), this->sender_process_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.sender_process_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_receiver_process_name;
        break;
      }

      // optional string receiver_process_name = 19;
      case 19: {
        if (tag == 154) {
         parse_receiver_process_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_process_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receiver_process_name().data(), this->receiver_process_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessageHeader.receiver_process_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBusMessageHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBusMessageHeader)
  return false;
#undef DO_
}

void DBusMessageHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBusMessageHeader)
  // required .DBusTraceMessageType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string sender = 2;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // optional string receiver = 3;
  if (has_receiver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->receiver(), output);
  }

  // optional int32 sender_pid = 4;
  if (has_sender_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sender_pid(), output);
  }

  // optional int32 receiver_pid = 5;
  if (has_receiver_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->receiver_pid(), output);
  }

  // optional int32 sender_user_id = 6;
  if (has_sender_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sender_user_id(), output);
  }

  // optional int32 receiver_user_id = 7;
  if (has_receiver_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->receiver_user_id(), output);
  }

  // repeated string sender_alias_names = 8;
  for (int i = 0; i < this->sender_alias_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_alias_names(i).data(), this->sender_alias_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.sender_alias_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->sender_alias_names(i), output);
  }

  // repeated string receiver_alias_names = 9;
  for (int i = 0; i < this->receiver_alias_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver_alias_names(i).data(), this->receiver_alias_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.receiver_alias_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->receiver_alias_names(i), output);
  }

  // optional int32 serial = 10;
  if (has_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->serial(), output);
  }

  // optional string path = 11;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->path(), output);
  }

  // optional string interface = 12;
  if (has_interface()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface().data(), this->interface().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->interface(), output);
  }

  // optional string member = 13;
  if (has_member()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->member().data(), this->member().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.member");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->member(), output);
  }

  // optional string property = 14;
  if (has_property()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->property().data(), this->property().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.property");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->property(), output);
  }

  // optional int32 reply_serial = 15;
  if (has_reply_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->reply_serial(), output);
  }

  // optional string error_name = 16;
  if (has_error_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_name().data(), this->error_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.error_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->error_name(), output);
  }

  // optional string method_signature = 17;
  if (has_method_signature()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_signature().data(), this->method_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.method_signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->method_signature(), output);
  }

  // optional string sender_process_name = 18;
  if (has_sender_process_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_process_name().data(), this->sender_process_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.sender_process_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->sender_process_name(), output);
  }

  // optional string receiver_process_name = 19;
  if (has_receiver_process_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver_process_name().data(), this->receiver_process_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.receiver_process_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->receiver_process_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DBusMessageHeader)
}

::google::protobuf::uint8* DBusMessageHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBusMessageHeader)
  // required .DBusTraceMessageType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string sender = 2;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // optional string receiver = 3;
  if (has_receiver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.receiver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->receiver(), target);
  }

  // optional int32 sender_pid = 4;
  if (has_sender_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sender_pid(), target);
  }

  // optional int32 receiver_pid = 5;
  if (has_receiver_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->receiver_pid(), target);
  }

  // optional int32 sender_user_id = 6;
  if (has_sender_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sender_user_id(), target);
  }

  // optional int32 receiver_user_id = 7;
  if (has_receiver_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->receiver_user_id(), target);
  }

  // repeated string sender_alias_names = 8;
  for (int i = 0; i < this->sender_alias_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_alias_names(i).data(), this->sender_alias_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.sender_alias_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->sender_alias_names(i), target);
  }

  // repeated string receiver_alias_names = 9;
  for (int i = 0; i < this->receiver_alias_names_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver_alias_names(i).data(), this->receiver_alias_names(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.receiver_alias_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->receiver_alias_names(i), target);
  }

  // optional int32 serial = 10;
  if (has_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->serial(), target);
  }

  // optional string path = 11;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->path(), target);
  }

  // optional string interface = 12;
  if (has_interface()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface().data(), this->interface().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->interface(), target);
  }

  // optional string member = 13;
  if (has_member()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->member().data(), this->member().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.member");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->member(), target);
  }

  // optional string property = 14;
  if (has_property()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->property().data(), this->property().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.property");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->property(), target);
  }

  // optional int32 reply_serial = 15;
  if (has_reply_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->reply_serial(), target);
  }

  // optional string error_name = 16;
  if (has_error_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_name().data(), this->error_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.error_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->error_name(), target);
  }

  // optional string method_signature = 17;
  if (has_method_signature()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_signature().data(), this->method_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.method_signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->method_signature(), target);
  }

  // optional string sender_process_name = 18;
  if (has_sender_process_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_process_name().data(), this->sender_process_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.sender_process_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->sender_process_name(), target);
  }

  // optional string receiver_process_name = 19;
  if (has_receiver_process_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver_process_name().data(), this->receiver_process_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessageHeader.receiver_process_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->receiver_process_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBusMessageHeader)
  return target;
}

int DBusMessageHeader::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBusMessageHeader)
  int total_size = 0;

  // required .DBusTraceMessageType type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional string sender = 2;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender());
    }

    // optional string receiver = 3;
    if (has_receiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver());
    }

    // optional int32 sender_pid = 4;
    if (has_sender_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sender_pid());
    }

    // optional int32 receiver_pid = 5;
    if (has_receiver_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->receiver_pid());
    }

    // optional int32 sender_user_id = 6;
    if (has_sender_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sender_user_id());
    }

    // optional int32 receiver_user_id = 7;
    if (has_receiver_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->receiver_user_id());
    }

  }
  if (_has_bits_[9 / 32] & 65024u) {
    // optional int32 serial = 10;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serial());
    }

    // optional string path = 11;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string interface = 12;
    if (has_interface()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interface());
    }

    // optional string member = 13;
    if (has_member()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->member());
    }

    // optional string property = 14;
    if (has_property()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->property());
    }

    // optional int32 reply_serial = 15;
    if (has_reply_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply_serial());
    }

    // optional string error_name = 16;
    if (has_error_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_name());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional string method_signature = 17;
    if (has_method_signature()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_signature());
    }

    // optional string sender_process_name = 18;
    if (has_sender_process_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_process_name());
    }

    // optional string receiver_process_name = 19;
    if (has_receiver_process_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_process_name());
    }

  }
  // repeated string sender_alias_names = 8;
  total_size += 1 * this->sender_alias_names_size();
  for (int i = 0; i < this->sender_alias_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sender_alias_names(i));
  }

  // repeated string receiver_alias_names = 9;
  total_size += 1 * this->receiver_alias_names_size();
  for (int i = 0; i < this->receiver_alias_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->receiver_alias_names(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBusMessageHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBusMessageHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBusMessageHeader* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBusMessageHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBusMessageHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBusMessageHeader)
    MergeFrom(*source);
  }
}

void DBusMessageHeader::MergeFrom(const DBusMessageHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBusMessageHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sender_alias_names_.MergeFrom(from.sender_alias_names_);
  receiver_alias_names_.MergeFrom(from.receiver_alias_names_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_sender()) {
      set_has_sender();
      sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
    }
    if (from.has_receiver()) {
      set_has_receiver();
      receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
    }
    if (from.has_sender_pid()) {
      set_sender_pid(from.sender_pid());
    }
    if (from.has_receiver_pid()) {
      set_receiver_pid(from.receiver_pid());
    }
    if (from.has_sender_user_id()) {
      set_sender_user_id(from.sender_user_id());
    }
    if (from.has_receiver_user_id()) {
      set_receiver_user_id(from.receiver_user_id());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_serial()) {
      set_serial(from.serial());
    }
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_interface()) {
      set_has_interface();
      interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
    }
    if (from.has_member()) {
      set_has_member();
      member_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.member_);
    }
    if (from.has_property()) {
      set_has_property();
      property_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_);
    }
    if (from.has_reply_serial()) {
      set_reply_serial(from.reply_serial());
    }
    if (from.has_error_name()) {
      set_has_error_name();
      error_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_name_);
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_method_signature()) {
      set_has_method_signature();
      method_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_signature_);
    }
    if (from.has_sender_process_name()) {
      set_has_sender_process_name();
      sender_process_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_process_name_);
    }
    if (from.has_receiver_process_name()) {
      set_has_receiver_process_name();
      receiver_process_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_process_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBusMessageHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBusMessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBusMessageHeader::CopyFrom(const DBusMessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBusMessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBusMessageHeader::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DBusMessageHeader::Swap(DBusMessageHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBusMessageHeader::InternalSwap(DBusMessageHeader* other) {
  std::swap(type_, other->type_);
  sender_.Swap(&other->sender_);
  receiver_.Swap(&other->receiver_);
  std::swap(sender_pid_, other->sender_pid_);
  std::swap(receiver_pid_, other->receiver_pid_);
  std::swap(sender_user_id_, other->sender_user_id_);
  std::swap(receiver_user_id_, other->receiver_user_id_);
  sender_alias_names_.UnsafeArenaSwap(&other->sender_alias_names_);
  receiver_alias_names_.UnsafeArenaSwap(&other->receiver_alias_names_);
  std::swap(serial_, other->serial_);
  path_.Swap(&other->path_);
  interface_.Swap(&other->interface_);
  member_.Swap(&other->member_);
  property_.Swap(&other->property_);
  std::swap(reply_serial_, other->reply_serial_);
  error_name_.Swap(&other->error_name_);
  method_signature_.Swap(&other->method_signature_);
  sender_process_name_.Swap(&other->sender_process_name_);
  receiver_process_name_.Swap(&other->receiver_process_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBusMessageHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBusMessageHeader_descriptor_;
  metadata.reflection = DBusMessageHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusMessageHeader

// required .DBusTraceMessageType type = 1;
bool DBusMessageHeader::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DBusMessageHeader::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void DBusMessageHeader::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void DBusMessageHeader::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::DBusTraceMessageType DBusMessageHeader::type() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.type)
  return static_cast< ::DBusTraceMessageType >(type_);
}
 void DBusMessageHeader::set_type(::DBusTraceMessageType value) {
  assert(::DBusTraceMessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.type)
}

// optional string sender = 2;
bool DBusMessageHeader::has_sender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DBusMessageHeader::set_has_sender() {
  _has_bits_[0] |= 0x00000002u;
}
void DBusMessageHeader::clear_has_sender() {
  _has_bits_[0] &= ~0x00000002u;
}
void DBusMessageHeader::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender();
}
 const ::std::string& DBusMessageHeader::sender() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_sender(const ::std::string& value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender)
}
 void DBusMessageHeader::set_sender(const char* value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.sender)
}
 void DBusMessageHeader::set_sender(const char* value, size_t size) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.sender)
}
 ::std::string* DBusMessageHeader::mutable_sender() {
  set_has_sender();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_sender() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.sender)
  clear_has_sender();
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    set_has_sender();
  } else {
    clear_has_sender();
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.sender)
}

// optional string receiver = 3;
bool DBusMessageHeader::has_receiver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DBusMessageHeader::set_has_receiver() {
  _has_bits_[0] |= 0x00000004u;
}
void DBusMessageHeader::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000004u;
}
void DBusMessageHeader::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver();
}
 const ::std::string& DBusMessageHeader::receiver() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_receiver(const ::std::string& value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver)
}
 void DBusMessageHeader::set_receiver(const char* value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.receiver)
}
 void DBusMessageHeader::set_receiver(const char* value, size_t size) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.receiver)
}
 ::std::string* DBusMessageHeader::mutable_receiver() {
  set_has_receiver();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_receiver() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.receiver)
  clear_has_receiver();
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    set_has_receiver();
  } else {
    clear_has_receiver();
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.receiver)
}

// optional int32 sender_pid = 4;
bool DBusMessageHeader::has_sender_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DBusMessageHeader::set_has_sender_pid() {
  _has_bits_[0] |= 0x00000008u;
}
void DBusMessageHeader::clear_has_sender_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
void DBusMessageHeader::clear_sender_pid() {
  sender_pid_ = 0;
  clear_has_sender_pid();
}
 ::google::protobuf::int32 DBusMessageHeader::sender_pid() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_pid)
  return sender_pid_;
}
 void DBusMessageHeader::set_sender_pid(::google::protobuf::int32 value) {
  set_has_sender_pid();
  sender_pid_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_pid)
}

// optional int32 receiver_pid = 5;
bool DBusMessageHeader::has_receiver_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DBusMessageHeader::set_has_receiver_pid() {
  _has_bits_[0] |= 0x00000010u;
}
void DBusMessageHeader::clear_has_receiver_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
void DBusMessageHeader::clear_receiver_pid() {
  receiver_pid_ = 0;
  clear_has_receiver_pid();
}
 ::google::protobuf::int32 DBusMessageHeader::receiver_pid() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_pid)
  return receiver_pid_;
}
 void DBusMessageHeader::set_receiver_pid(::google::protobuf::int32 value) {
  set_has_receiver_pid();
  receiver_pid_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_pid)
}

// optional int32 sender_user_id = 6;
bool DBusMessageHeader::has_sender_user_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DBusMessageHeader::set_has_sender_user_id() {
  _has_bits_[0] |= 0x00000020u;
}
void DBusMessageHeader::clear_has_sender_user_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void DBusMessageHeader::clear_sender_user_id() {
  sender_user_id_ = 0;
  clear_has_sender_user_id();
}
 ::google::protobuf::int32 DBusMessageHeader::sender_user_id() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_user_id)
  return sender_user_id_;
}
 void DBusMessageHeader::set_sender_user_id(::google::protobuf::int32 value) {
  set_has_sender_user_id();
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_user_id)
}

// optional int32 receiver_user_id = 7;
bool DBusMessageHeader::has_receiver_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DBusMessageHeader::set_has_receiver_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
void DBusMessageHeader::clear_has_receiver_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
void DBusMessageHeader::clear_receiver_user_id() {
  receiver_user_id_ = 0;
  clear_has_receiver_user_id();
}
 ::google::protobuf::int32 DBusMessageHeader::receiver_user_id() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_user_id)
  return receiver_user_id_;
}
 void DBusMessageHeader::set_receiver_user_id(::google::protobuf::int32 value) {
  set_has_receiver_user_id();
  receiver_user_id_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_user_id)
}

// repeated string sender_alias_names = 8;
int DBusMessageHeader::sender_alias_names_size() const {
  return sender_alias_names_.size();
}
void DBusMessageHeader::clear_sender_alias_names() {
  sender_alias_names_.Clear();
}
 const ::std::string& DBusMessageHeader::sender_alias_names(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_.Get(index);
}
 ::std::string* DBusMessageHeader::mutable_sender_alias_names(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_.Mutable(index);
}
 void DBusMessageHeader::set_sender_alias_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_alias_names)
  sender_alias_names_.Mutable(index)->assign(value);
}
 void DBusMessageHeader::set_sender_alias_names(int index, const char* value) {
  sender_alias_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.sender_alias_names)
}
 void DBusMessageHeader::set_sender_alias_names(int index, const char* value, size_t size) {
  sender_alias_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.sender_alias_names)
}
 ::std::string* DBusMessageHeader::add_sender_alias_names() {
  // @@protoc_insertion_point(field_add_mutable:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_.Add();
}
 void DBusMessageHeader::add_sender_alias_names(const ::std::string& value) {
  sender_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DBusMessageHeader.sender_alias_names)
}
 void DBusMessageHeader::add_sender_alias_names(const char* value) {
  sender_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DBusMessageHeader.sender_alias_names)
}
 void DBusMessageHeader::add_sender_alias_names(const char* value, size_t size) {
  sender_alias_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DBusMessageHeader.sender_alias_names)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
DBusMessageHeader::sender_alias_names() const {
  // @@protoc_insertion_point(field_list:DBusMessageHeader.sender_alias_names)
  return sender_alias_names_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
DBusMessageHeader::mutable_sender_alias_names() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessageHeader.sender_alias_names)
  return &sender_alias_names_;
}

// repeated string receiver_alias_names = 9;
int DBusMessageHeader::receiver_alias_names_size() const {
  return receiver_alias_names_.size();
}
void DBusMessageHeader::clear_receiver_alias_names() {
  receiver_alias_names_.Clear();
}
 const ::std::string& DBusMessageHeader::receiver_alias_names(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_.Get(index);
}
 ::std::string* DBusMessageHeader::mutable_receiver_alias_names(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_.Mutable(index);
}
 void DBusMessageHeader::set_receiver_alias_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_alias_names)
  receiver_alias_names_.Mutable(index)->assign(value);
}
 void DBusMessageHeader::set_receiver_alias_names(int index, const char* value) {
  receiver_alias_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.receiver_alias_names)
}
 void DBusMessageHeader::set_receiver_alias_names(int index, const char* value, size_t size) {
  receiver_alias_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.receiver_alias_names)
}
 ::std::string* DBusMessageHeader::add_receiver_alias_names() {
  // @@protoc_insertion_point(field_add_mutable:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_.Add();
}
 void DBusMessageHeader::add_receiver_alias_names(const ::std::string& value) {
  receiver_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DBusMessageHeader.receiver_alias_names)
}
 void DBusMessageHeader::add_receiver_alias_names(const char* value) {
  receiver_alias_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DBusMessageHeader.receiver_alias_names)
}
 void DBusMessageHeader::add_receiver_alias_names(const char* value, size_t size) {
  receiver_alias_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DBusMessageHeader.receiver_alias_names)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
DBusMessageHeader::receiver_alias_names() const {
  // @@protoc_insertion_point(field_list:DBusMessageHeader.receiver_alias_names)
  return receiver_alias_names_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
DBusMessageHeader::mutable_receiver_alias_names() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessageHeader.receiver_alias_names)
  return &receiver_alias_names_;
}

// optional int32 serial = 10;
bool DBusMessageHeader::has_serial() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DBusMessageHeader::set_has_serial() {
  _has_bits_[0] |= 0x00000200u;
}
void DBusMessageHeader::clear_has_serial() {
  _has_bits_[0] &= ~0x00000200u;
}
void DBusMessageHeader::clear_serial() {
  serial_ = 0;
  clear_has_serial();
}
 ::google::protobuf::int32 DBusMessageHeader::serial() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.serial)
  return serial_;
}
 void DBusMessageHeader::set_serial(::google::protobuf::int32 value) {
  set_has_serial();
  serial_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.serial)
}

// optional string path = 11;
bool DBusMessageHeader::has_path() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DBusMessageHeader::set_has_path() {
  _has_bits_[0] |= 0x00000400u;
}
void DBusMessageHeader::clear_has_path() {
  _has_bits_[0] &= ~0x00000400u;
}
void DBusMessageHeader::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
 const ::std::string& DBusMessageHeader::path() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.path)
}
 void DBusMessageHeader::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.path)
}
 void DBusMessageHeader::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.path)
}
 ::std::string* DBusMessageHeader::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_path() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.path)
}

// optional string interface = 12;
bool DBusMessageHeader::has_interface() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DBusMessageHeader::set_has_interface() {
  _has_bits_[0] |= 0x00000800u;
}
void DBusMessageHeader::clear_has_interface() {
  _has_bits_[0] &= ~0x00000800u;
}
void DBusMessageHeader::clear_interface() {
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_interface();
}
 const ::std::string& DBusMessageHeader::interface() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.interface)
  return interface_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_interface(const ::std::string& value) {
  set_has_interface();
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.interface)
}
 void DBusMessageHeader::set_interface(const char* value) {
  set_has_interface();
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.interface)
}
 void DBusMessageHeader::set_interface(const char* value, size_t size) {
  set_has_interface();
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.interface)
}
 ::std::string* DBusMessageHeader::mutable_interface() {
  set_has_interface();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.interface)
  return interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_interface() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.interface)
  clear_has_interface();
  return interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_interface(::std::string* interface) {
  if (interface != NULL) {
    set_has_interface();
  } else {
    clear_has_interface();
  }
  interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.interface)
}

// optional string member = 13;
bool DBusMessageHeader::has_member() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void DBusMessageHeader::set_has_member() {
  _has_bits_[0] |= 0x00001000u;
}
void DBusMessageHeader::clear_has_member() {
  _has_bits_[0] &= ~0x00001000u;
}
void DBusMessageHeader::clear_member() {
  member_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_member();
}
 const ::std::string& DBusMessageHeader::member() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.member)
  return member_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_member(const ::std::string& value) {
  set_has_member();
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.member)
}
 void DBusMessageHeader::set_member(const char* value) {
  set_has_member();
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.member)
}
 void DBusMessageHeader::set_member(const char* value, size_t size) {
  set_has_member();
  member_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.member)
}
 ::std::string* DBusMessageHeader::mutable_member() {
  set_has_member();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.member)
  return member_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_member() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.member)
  clear_has_member();
  return member_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_member(::std::string* member) {
  if (member != NULL) {
    set_has_member();
  } else {
    clear_has_member();
  }
  member_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), member);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.member)
}

// optional string property = 14;
bool DBusMessageHeader::has_property() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void DBusMessageHeader::set_has_property() {
  _has_bits_[0] |= 0x00002000u;
}
void DBusMessageHeader::clear_has_property() {
  _has_bits_[0] &= ~0x00002000u;
}
void DBusMessageHeader::clear_property() {
  property_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_property();
}
 const ::std::string& DBusMessageHeader::property() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.property)
  return property_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_property(const ::std::string& value) {
  set_has_property();
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.property)
}
 void DBusMessageHeader::set_property(const char* value) {
  set_has_property();
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.property)
}
 void DBusMessageHeader::set_property(const char* value, size_t size) {
  set_has_property();
  property_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.property)
}
 ::std::string* DBusMessageHeader::mutable_property() {
  set_has_property();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.property)
  return property_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_property() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.property)
  clear_has_property();
  return property_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_property(::std::string* property) {
  if (property != NULL) {
    set_has_property();
  } else {
    clear_has_property();
  }
  property_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.property)
}

// optional int32 reply_serial = 15;
bool DBusMessageHeader::has_reply_serial() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void DBusMessageHeader::set_has_reply_serial() {
  _has_bits_[0] |= 0x00004000u;
}
void DBusMessageHeader::clear_has_reply_serial() {
  _has_bits_[0] &= ~0x00004000u;
}
void DBusMessageHeader::clear_reply_serial() {
  reply_serial_ = 0;
  clear_has_reply_serial();
}
 ::google::protobuf::int32 DBusMessageHeader::reply_serial() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.reply_serial)
  return reply_serial_;
}
 void DBusMessageHeader::set_reply_serial(::google::protobuf::int32 value) {
  set_has_reply_serial();
  reply_serial_ = value;
  // @@protoc_insertion_point(field_set:DBusMessageHeader.reply_serial)
}

// optional string error_name = 16;
bool DBusMessageHeader::has_error_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void DBusMessageHeader::set_has_error_name() {
  _has_bits_[0] |= 0x00008000u;
}
void DBusMessageHeader::clear_has_error_name() {
  _has_bits_[0] &= ~0x00008000u;
}
void DBusMessageHeader::clear_error_name() {
  error_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_name();
}
 const ::std::string& DBusMessageHeader::error_name() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.error_name)
  return error_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_error_name(const ::std::string& value) {
  set_has_error_name();
  error_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.error_name)
}
 void DBusMessageHeader::set_error_name(const char* value) {
  set_has_error_name();
  error_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.error_name)
}
 void DBusMessageHeader::set_error_name(const char* value, size_t size) {
  set_has_error_name();
  error_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.error_name)
}
 ::std::string* DBusMessageHeader::mutable_error_name() {
  set_has_error_name();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.error_name)
  return error_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_error_name() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.error_name)
  clear_has_error_name();
  return error_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_error_name(::std::string* error_name) {
  if (error_name != NULL) {
    set_has_error_name();
  } else {
    clear_has_error_name();
  }
  error_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_name);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.error_name)
}

// optional string method_signature = 17;
bool DBusMessageHeader::has_method_signature() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void DBusMessageHeader::set_has_method_signature() {
  _has_bits_[0] |= 0x00010000u;
}
void DBusMessageHeader::clear_has_method_signature() {
  _has_bits_[0] &= ~0x00010000u;
}
void DBusMessageHeader::clear_method_signature() {
  method_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_signature();
}
 const ::std::string& DBusMessageHeader::method_signature() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.method_signature)
  return method_signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_method_signature(const ::std::string& value) {
  set_has_method_signature();
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.method_signature)
}
 void DBusMessageHeader::set_method_signature(const char* value) {
  set_has_method_signature();
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.method_signature)
}
 void DBusMessageHeader::set_method_signature(const char* value, size_t size) {
  set_has_method_signature();
  method_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.method_signature)
}
 ::std::string* DBusMessageHeader::mutable_method_signature() {
  set_has_method_signature();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.method_signature)
  return method_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_method_signature() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.method_signature)
  clear_has_method_signature();
  return method_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_method_signature(::std::string* method_signature) {
  if (method_signature != NULL) {
    set_has_method_signature();
  } else {
    clear_has_method_signature();
  }
  method_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_signature);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.method_signature)
}

// optional string sender_process_name = 18;
bool DBusMessageHeader::has_sender_process_name() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void DBusMessageHeader::set_has_sender_process_name() {
  _has_bits_[0] |= 0x00020000u;
}
void DBusMessageHeader::clear_has_sender_process_name() {
  _has_bits_[0] &= ~0x00020000u;
}
void DBusMessageHeader::clear_sender_process_name() {
  sender_process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_process_name();
}
 const ::std::string& DBusMessageHeader::sender_process_name() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.sender_process_name)
  return sender_process_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_sender_process_name(const ::std::string& value) {
  set_has_sender_process_name();
  sender_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.sender_process_name)
}
 void DBusMessageHeader::set_sender_process_name(const char* value) {
  set_has_sender_process_name();
  sender_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.sender_process_name)
}
 void DBusMessageHeader::set_sender_process_name(const char* value, size_t size) {
  set_has_sender_process_name();
  sender_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.sender_process_name)
}
 ::std::string* DBusMessageHeader::mutable_sender_process_name() {
  set_has_sender_process_name();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.sender_process_name)
  return sender_process_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_sender_process_name() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.sender_process_name)
  clear_has_sender_process_name();
  return sender_process_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_sender_process_name(::std::string* sender_process_name) {
  if (sender_process_name != NULL) {
    set_has_sender_process_name();
  } else {
    clear_has_sender_process_name();
  }
  sender_process_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_process_name);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.sender_process_name)
}

// optional string receiver_process_name = 19;
bool DBusMessageHeader::has_receiver_process_name() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void DBusMessageHeader::set_has_receiver_process_name() {
  _has_bits_[0] |= 0x00040000u;
}
void DBusMessageHeader::clear_has_receiver_process_name() {
  _has_bits_[0] &= ~0x00040000u;
}
void DBusMessageHeader::clear_receiver_process_name() {
  receiver_process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver_process_name();
}
 const ::std::string& DBusMessageHeader::receiver_process_name() const {
  // @@protoc_insertion_point(field_get:DBusMessageHeader.receiver_process_name)
  return receiver_process_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_receiver_process_name(const ::std::string& value) {
  set_has_receiver_process_name();
  receiver_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessageHeader.receiver_process_name)
}
 void DBusMessageHeader::set_receiver_process_name(const char* value) {
  set_has_receiver_process_name();
  receiver_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessageHeader.receiver_process_name)
}
 void DBusMessageHeader::set_receiver_process_name(const char* value, size_t size) {
  set_has_receiver_process_name();
  receiver_process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessageHeader.receiver_process_name)
}
 ::std::string* DBusMessageHeader::mutable_receiver_process_name() {
  set_has_receiver_process_name();
  // @@protoc_insertion_point(field_mutable:DBusMessageHeader.receiver_process_name)
  return receiver_process_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessageHeader::release_receiver_process_name() {
  // @@protoc_insertion_point(field_release:DBusMessageHeader.receiver_process_name)
  clear_has_receiver_process_name();
  return receiver_process_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessageHeader::set_allocated_receiver_process_name(::std::string* receiver_process_name) {
  if (receiver_process_name != NULL) {
    set_has_receiver_process_name();
  } else {
    clear_has_receiver_process_name();
  }
  receiver_process_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver_process_name);
  // @@protoc_insertion_point(field_set_allocated:DBusMessageHeader.receiver_process_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBusMessagePayload::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBusMessagePayload::DBusMessagePayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBusMessagePayload)
}

void DBusMessagePayload::InitAsDefaultInstance() {
}

DBusMessagePayload::DBusMessagePayload(const DBusMessagePayload& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBusMessagePayload)
}

void DBusMessagePayload::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBusMessagePayload::~DBusMessagePayload() {
  // @@protoc_insertion_point(destructor:DBusMessagePayload)
  SharedDtor();
}

void DBusMessagePayload::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBusMessagePayload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBusMessagePayload::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusMessagePayload_descriptor_;
}

const DBusMessagePayload& DBusMessagePayload::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  return *default_instance_;
}

DBusMessagePayload* DBusMessagePayload::default_instance_ = NULL;

DBusMessagePayload* DBusMessagePayload::New(::google::protobuf::Arena* arena) const {
  DBusMessagePayload* n = new DBusMessagePayload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBusMessagePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:DBusMessagePayload)
  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBusMessagePayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBusMessagePayload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBusMessagePayloadItem param = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_param;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBusMessagePayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBusMessagePayload)
  return false;
#undef DO_
}

void DBusMessagePayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBusMessagePayload)
  // repeated .DBusMessagePayloadItem param = 1;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->param(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DBusMessagePayload)
}

::google::protobuf::uint8* DBusMessagePayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBusMessagePayload)
  // repeated .DBusMessagePayloadItem param = 1;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->param(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBusMessagePayload)
  return target;
}

int DBusMessagePayload::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBusMessagePayload)
  int total_size = 0;

  // repeated .DBusMessagePayloadItem param = 1;
  total_size += 1 * this->param_size();
  for (int i = 0; i < this->param_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBusMessagePayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBusMessagePayload)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBusMessagePayload* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBusMessagePayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBusMessagePayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBusMessagePayload)
    MergeFrom(*source);
  }
}

void DBusMessagePayload::MergeFrom(const DBusMessagePayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBusMessagePayload)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  param_.MergeFrom(from.param_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBusMessagePayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBusMessagePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBusMessagePayload::CopyFrom(const DBusMessagePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBusMessagePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBusMessagePayload::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->param())) return false;
  return true;
}

void DBusMessagePayload::Swap(DBusMessagePayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBusMessagePayload::InternalSwap(DBusMessagePayload* other) {
  param_.UnsafeArenaSwap(&other->param_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBusMessagePayload::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBusMessagePayload_descriptor_;
  metadata.reflection = DBusMessagePayload_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusMessagePayload

// repeated .DBusMessagePayloadItem param = 1;
int DBusMessagePayload::param_size() const {
  return param_.size();
}
void DBusMessagePayload::clear_param() {
  param_.Clear();
}
const ::DBusMessagePayloadItem& DBusMessagePayload::param(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessagePayload.param)
  return param_.Get(index);
}
::DBusMessagePayloadItem* DBusMessagePayload::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessagePayload.param)
  return param_.Mutable(index);
}
::DBusMessagePayloadItem* DBusMessagePayload::add_param() {
  // @@protoc_insertion_point(field_add:DBusMessagePayload.param)
  return param_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >*
DBusMessagePayload::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessagePayload.param)
  return &param_;
}
const ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >&
DBusMessagePayload::param() const {
  // @@protoc_insertion_point(field_list:DBusMessagePayload.param)
  return param_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBusMessagePayloadItem::kTypeFieldNumber;
const int DBusMessagePayloadItem::kIntValFieldNumber;
const int DBusMessagePayloadItem::kUintValFieldNumber;
const int DBusMessagePayloadItem::kDoubleValFieldNumber;
const int DBusMessagePayloadItem::kStrValFieldNumber;
const int DBusMessagePayloadItem::kCompositeValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBusMessagePayloadItem::DBusMessagePayloadItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBusMessagePayloadItem)
}

void DBusMessagePayloadItem::InitAsDefaultInstance() {
  composite_val_ = const_cast< ::DBusMessagePayloadCompositeItem*>(&::DBusMessagePayloadCompositeItem::default_instance());
}

DBusMessagePayloadItem::DBusMessagePayloadItem(const DBusMessagePayloadItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBusMessagePayloadItem)
}

void DBusMessagePayloadItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  int_val_ = GOOGLE_LONGLONG(0);
  uint_val_ = GOOGLE_ULONGLONG(0);
  double_val_ = 0;
  str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  composite_val_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBusMessagePayloadItem::~DBusMessagePayloadItem() {
  // @@protoc_insertion_point(destructor:DBusMessagePayloadItem)
  SharedDtor();
}

void DBusMessagePayloadItem::SharedDtor() {
  str_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete composite_val_;
  }
}

void DBusMessagePayloadItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBusMessagePayloadItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusMessagePayloadItem_descriptor_;
}

const DBusMessagePayloadItem& DBusMessagePayloadItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  return *default_instance_;
}

DBusMessagePayloadItem* DBusMessagePayloadItem::default_instance_ = NULL;

DBusMessagePayloadItem* DBusMessagePayloadItem::New(::google::protobuf::Arena* arena) const {
  DBusMessagePayloadItem* n = new DBusMessagePayloadItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBusMessagePayloadItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBusMessagePayloadItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBusMessagePayloadItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBusMessagePayloadItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(int_val_, double_val_);
    type_ = 0;
    if (has_str_val()) {
      str_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_composite_val()) {
      if (composite_val_ != NULL) composite_val_->::DBusMessagePayloadCompositeItem::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBusMessagePayloadItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBusMessagePayloadItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DBusParamType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DBusParamType_IsValid(value)) {
            set_type(static_cast< ::DBusParamType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int_val;
        break;
      }

      // optional int64 int_val = 2;
      case 2: {
        if (tag == 16) {
         parse_int_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int_val_)));
          set_has_int_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uint_val;
        break;
      }

      // optional uint64 uint_val = 3;
      case 3: {
        if (tag == 24) {
         parse_uint_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint_val_)));
          set_has_uint_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_double_val;
        break;
      }

      // optional double double_val = 4;
      case 4: {
        if (tag == 33) {
         parse_double_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_val_)));
          set_has_double_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_str_val;
        break;
      }

      // optional string str_val = 5;
      case 5: {
        if (tag == 42) {
         parse_str_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str_val().data(), this->str_val().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DBusMessagePayloadItem.str_val");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_composite_val;
        break;
      }

      // optional .DBusMessagePayloadCompositeItem composite_val = 6;
      case 6: {
        if (tag == 50) {
         parse_composite_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_composite_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBusMessagePayloadItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBusMessagePayloadItem)
  return false;
#undef DO_
}

void DBusMessagePayloadItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBusMessagePayloadItem)
  // required .DBusParamType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int64 int_val = 2;
  if (has_int_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int_val(), output);
  }

  // optional uint64 uint_val = 3;
  if (has_uint_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint_val(), output);
  }

  // optional double double_val = 4;
  if (has_double_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->double_val(), output);
  }

  // optional string str_val = 5;
  if (has_str_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_val().data(), this->str_val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessagePayloadItem.str_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->str_val(), output);
  }

  // optional .DBusMessagePayloadCompositeItem composite_val = 6;
  if (has_composite_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->composite_val_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DBusMessagePayloadItem)
}

::google::protobuf::uint8* DBusMessagePayloadItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBusMessagePayloadItem)
  // required .DBusParamType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int64 int_val = 2;
  if (has_int_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int_val(), target);
  }

  // optional uint64 uint_val = 3;
  if (has_uint_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uint_val(), target);
  }

  // optional double double_val = 4;
  if (has_double_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->double_val(), target);
  }

  // optional string str_val = 5;
  if (has_str_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_val().data(), this->str_val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DBusMessagePayloadItem.str_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->str_val(), target);
  }

  // optional .DBusMessagePayloadCompositeItem composite_val = 6;
  if (has_composite_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->composite_val_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBusMessagePayloadItem)
  return target;
}

int DBusMessagePayloadItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBusMessagePayloadItem)
  int total_size = 0;

  // required .DBusParamType type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional int64 int_val = 2;
    if (has_int_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_val());
    }

    // optional uint64 uint_val = 3;
    if (has_uint_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint_val());
    }

    // optional double double_val = 4;
    if (has_double_val()) {
      total_size += 1 + 8;
    }

    // optional string str_val = 5;
    if (has_str_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_val());
    }

    // optional .DBusMessagePayloadCompositeItem composite_val = 6;
    if (has_composite_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->composite_val_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBusMessagePayloadItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBusMessagePayloadItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBusMessagePayloadItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBusMessagePayloadItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBusMessagePayloadItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBusMessagePayloadItem)
    MergeFrom(*source);
  }
}

void DBusMessagePayloadItem::MergeFrom(const DBusMessagePayloadItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBusMessagePayloadItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_int_val()) {
      set_int_val(from.int_val());
    }
    if (from.has_uint_val()) {
      set_uint_val(from.uint_val());
    }
    if (from.has_double_val()) {
      set_double_val(from.double_val());
    }
    if (from.has_str_val()) {
      set_has_str_val();
      str_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_val_);
    }
    if (from.has_composite_val()) {
      mutable_composite_val()->::DBusMessagePayloadCompositeItem::MergeFrom(from.composite_val());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBusMessagePayloadItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBusMessagePayloadItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBusMessagePayloadItem::CopyFrom(const DBusMessagePayloadItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBusMessagePayloadItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBusMessagePayloadItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_composite_val()) {
    if (!this->composite_val_->IsInitialized()) return false;
  }
  return true;
}

void DBusMessagePayloadItem::Swap(DBusMessagePayloadItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBusMessagePayloadItem::InternalSwap(DBusMessagePayloadItem* other) {
  std::swap(type_, other->type_);
  std::swap(int_val_, other->int_val_);
  std::swap(uint_val_, other->uint_val_);
  std::swap(double_val_, other->double_val_);
  str_val_.Swap(&other->str_val_);
  std::swap(composite_val_, other->composite_val_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBusMessagePayloadItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBusMessagePayloadItem_descriptor_;
  metadata.reflection = DBusMessagePayloadItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusMessagePayloadItem

// required .DBusParamType type = 1;
bool DBusMessagePayloadItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DBusMessagePayloadItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void DBusMessagePayloadItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void DBusMessagePayloadItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::DBusParamType DBusMessagePayloadItem::type() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.type)
  return static_cast< ::DBusParamType >(type_);
}
 void DBusMessagePayloadItem::set_type(::DBusParamType value) {
  assert(::DBusParamType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.type)
}

// optional int64 int_val = 2;
bool DBusMessagePayloadItem::has_int_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DBusMessagePayloadItem::set_has_int_val() {
  _has_bits_[0] |= 0x00000002u;
}
void DBusMessagePayloadItem::clear_has_int_val() {
  _has_bits_[0] &= ~0x00000002u;
}
void DBusMessagePayloadItem::clear_int_val() {
  int_val_ = GOOGLE_LONGLONG(0);
  clear_has_int_val();
}
 ::google::protobuf::int64 DBusMessagePayloadItem::int_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.int_val)
  return int_val_;
}
 void DBusMessagePayloadItem::set_int_val(::google::protobuf::int64 value) {
  set_has_int_val();
  int_val_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.int_val)
}

// optional uint64 uint_val = 3;
bool DBusMessagePayloadItem::has_uint_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DBusMessagePayloadItem::set_has_uint_val() {
  _has_bits_[0] |= 0x00000004u;
}
void DBusMessagePayloadItem::clear_has_uint_val() {
  _has_bits_[0] &= ~0x00000004u;
}
void DBusMessagePayloadItem::clear_uint_val() {
  uint_val_ = GOOGLE_ULONGLONG(0);
  clear_has_uint_val();
}
 ::google::protobuf::uint64 DBusMessagePayloadItem::uint_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.uint_val)
  return uint_val_;
}
 void DBusMessagePayloadItem::set_uint_val(::google::protobuf::uint64 value) {
  set_has_uint_val();
  uint_val_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.uint_val)
}

// optional double double_val = 4;
bool DBusMessagePayloadItem::has_double_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DBusMessagePayloadItem::set_has_double_val() {
  _has_bits_[0] |= 0x00000008u;
}
void DBusMessagePayloadItem::clear_has_double_val() {
  _has_bits_[0] &= ~0x00000008u;
}
void DBusMessagePayloadItem::clear_double_val() {
  double_val_ = 0;
  clear_has_double_val();
}
 double DBusMessagePayloadItem::double_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.double_val)
  return double_val_;
}
 void DBusMessagePayloadItem::set_double_val(double value) {
  set_has_double_val();
  double_val_ = value;
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.double_val)
}

// optional string str_val = 5;
bool DBusMessagePayloadItem::has_str_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DBusMessagePayloadItem::set_has_str_val() {
  _has_bits_[0] |= 0x00000010u;
}
void DBusMessagePayloadItem::clear_has_str_val() {
  _has_bits_[0] &= ~0x00000010u;
}
void DBusMessagePayloadItem::clear_str_val() {
  str_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str_val();
}
 const ::std::string& DBusMessagePayloadItem::str_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.str_val)
  return str_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessagePayloadItem::set_str_val(const ::std::string& value) {
  set_has_str_val();
  str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBusMessagePayloadItem.str_val)
}
 void DBusMessagePayloadItem::set_str_val(const char* value) {
  set_has_str_val();
  str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBusMessagePayloadItem.str_val)
}
 void DBusMessagePayloadItem::set_str_val(const char* value, size_t size) {
  set_has_str_val();
  str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBusMessagePayloadItem.str_val)
}
 ::std::string* DBusMessagePayloadItem::mutable_str_val() {
  set_has_str_val();
  // @@protoc_insertion_point(field_mutable:DBusMessagePayloadItem.str_val)
  return str_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBusMessagePayloadItem::release_str_val() {
  // @@protoc_insertion_point(field_release:DBusMessagePayloadItem.str_val)
  clear_has_str_val();
  return str_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBusMessagePayloadItem::set_allocated_str_val(::std::string* str_val) {
  if (str_val != NULL) {
    set_has_str_val();
  } else {
    clear_has_str_val();
  }
  str_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_val);
  // @@protoc_insertion_point(field_set_allocated:DBusMessagePayloadItem.str_val)
}

// optional .DBusMessagePayloadCompositeItem composite_val = 6;
bool DBusMessagePayloadItem::has_composite_val() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DBusMessagePayloadItem::set_has_composite_val() {
  _has_bits_[0] |= 0x00000020u;
}
void DBusMessagePayloadItem::clear_has_composite_val() {
  _has_bits_[0] &= ~0x00000020u;
}
void DBusMessagePayloadItem::clear_composite_val() {
  if (composite_val_ != NULL) composite_val_->::DBusMessagePayloadCompositeItem::Clear();
  clear_has_composite_val();
}
const ::DBusMessagePayloadCompositeItem& DBusMessagePayloadItem::composite_val() const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadItem.composite_val)
  return composite_val_ != NULL ? *composite_val_ : *default_instance_->composite_val_;
}
::DBusMessagePayloadCompositeItem* DBusMessagePayloadItem::mutable_composite_val() {
  set_has_composite_val();
  if (composite_val_ == NULL) {
    composite_val_ = new ::DBusMessagePayloadCompositeItem;
  }
  // @@protoc_insertion_point(field_mutable:DBusMessagePayloadItem.composite_val)
  return composite_val_;
}
::DBusMessagePayloadCompositeItem* DBusMessagePayloadItem::release_composite_val() {
  // @@protoc_insertion_point(field_release:DBusMessagePayloadItem.composite_val)
  clear_has_composite_val();
  ::DBusMessagePayloadCompositeItem* temp = composite_val_;
  composite_val_ = NULL;
  return temp;
}
void DBusMessagePayloadItem::set_allocated_composite_val(::DBusMessagePayloadCompositeItem* composite_val) {
  delete composite_val_;
  composite_val_ = composite_val;
  if (composite_val) {
    set_has_composite_val();
  } else {
    clear_has_composite_val();
  }
  // @@protoc_insertion_point(field_set_allocated:DBusMessagePayloadItem.composite_val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBusMessagePayloadCompositeItem::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBusMessagePayloadCompositeItem::DBusMessagePayloadCompositeItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBusMessagePayloadCompositeItem)
}

void DBusMessagePayloadCompositeItem::InitAsDefaultInstance() {
}

DBusMessagePayloadCompositeItem::DBusMessagePayloadCompositeItem(const DBusMessagePayloadCompositeItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBusMessagePayloadCompositeItem)
}

void DBusMessagePayloadCompositeItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBusMessagePayloadCompositeItem::~DBusMessagePayloadCompositeItem() {
  // @@protoc_insertion_point(destructor:DBusMessagePayloadCompositeItem)
  SharedDtor();
}

void DBusMessagePayloadCompositeItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBusMessagePayloadCompositeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBusMessagePayloadCompositeItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBusMessagePayloadCompositeItem_descriptor_;
}

const DBusMessagePayloadCompositeItem& DBusMessagePayloadCompositeItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_target_5fagent_5fprot_5fdbus_5fmonitor_2eproto();
  return *default_instance_;
}

DBusMessagePayloadCompositeItem* DBusMessagePayloadCompositeItem::default_instance_ = NULL;

DBusMessagePayloadCompositeItem* DBusMessagePayloadCompositeItem::New(::google::protobuf::Arena* arena) const {
  DBusMessagePayloadCompositeItem* n = new DBusMessagePayloadCompositeItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBusMessagePayloadCompositeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBusMessagePayloadCompositeItem)
  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBusMessagePayloadCompositeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBusMessagePayloadCompositeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBusMessagePayloadItem param = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_param;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBusMessagePayloadCompositeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBusMessagePayloadCompositeItem)
  return false;
#undef DO_
}

void DBusMessagePayloadCompositeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBusMessagePayloadCompositeItem)
  // repeated .DBusMessagePayloadItem param = 1;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->param(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DBusMessagePayloadCompositeItem)
}

::google::protobuf::uint8* DBusMessagePayloadCompositeItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBusMessagePayloadCompositeItem)
  // repeated .DBusMessagePayloadItem param = 1;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->param(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBusMessagePayloadCompositeItem)
  return target;
}

int DBusMessagePayloadCompositeItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBusMessagePayloadCompositeItem)
  int total_size = 0;

  // repeated .DBusMessagePayloadItem param = 1;
  total_size += 1 * this->param_size();
  for (int i = 0; i < this->param_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBusMessagePayloadCompositeItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBusMessagePayloadCompositeItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBusMessagePayloadCompositeItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBusMessagePayloadCompositeItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBusMessagePayloadCompositeItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBusMessagePayloadCompositeItem)
    MergeFrom(*source);
  }
}

void DBusMessagePayloadCompositeItem::MergeFrom(const DBusMessagePayloadCompositeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBusMessagePayloadCompositeItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  param_.MergeFrom(from.param_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBusMessagePayloadCompositeItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBusMessagePayloadCompositeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBusMessagePayloadCompositeItem::CopyFrom(const DBusMessagePayloadCompositeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBusMessagePayloadCompositeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBusMessagePayloadCompositeItem::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->param())) return false;
  return true;
}

void DBusMessagePayloadCompositeItem::Swap(DBusMessagePayloadCompositeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBusMessagePayloadCompositeItem::InternalSwap(DBusMessagePayloadCompositeItem* other) {
  param_.UnsafeArenaSwap(&other->param_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBusMessagePayloadCompositeItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBusMessagePayloadCompositeItem_descriptor_;
  metadata.reflection = DBusMessagePayloadCompositeItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBusMessagePayloadCompositeItem

// repeated .DBusMessagePayloadItem param = 1;
int DBusMessagePayloadCompositeItem::param_size() const {
  return param_.size();
}
void DBusMessagePayloadCompositeItem::clear_param() {
  param_.Clear();
}
const ::DBusMessagePayloadItem& DBusMessagePayloadCompositeItem::param(int index) const {
  // @@protoc_insertion_point(field_get:DBusMessagePayloadCompositeItem.param)
  return param_.Get(index);
}
::DBusMessagePayloadItem* DBusMessagePayloadCompositeItem::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:DBusMessagePayloadCompositeItem.param)
  return param_.Mutable(index);
}
::DBusMessagePayloadItem* DBusMessagePayloadCompositeItem::add_param() {
  // @@protoc_insertion_point(field_add:DBusMessagePayloadCompositeItem.param)
  return param_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >*
DBusMessagePayloadCompositeItem::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:DBusMessagePayloadCompositeItem.param)
  return &param_;
}
const ::google::protobuf::RepeatedPtrField< ::DBusMessagePayloadItem >&
DBusMessagePayloadCompositeItem::param() const {
  // @@protoc_insertion_point(field_list:DBusMessagePayloadCompositeItem.param)
  return param_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
